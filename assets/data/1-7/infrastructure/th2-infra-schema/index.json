{"hash":"42e3905f95464c88d1c3007f0efced0d0c4402cb","data":{"doc":{"title":"th2-infra-schema","inner_title":"","description":"th2-infra-schema\n\nth2 allows you to create your own Kubernetes-based microservices architecture without a prerequisite of profound knowledge of Kubernetes itself. \nAll you need is install th2 and define components of your own system with YAML manifests in the infra-schema repository.","content":"\n# th2-infra-schema\n\nth2 allows you to create your own Kubernetes-based microservices architecture without a prerequisite of profound knowledge of Kubernetes itself. \nAll you need is install th2 and define components of your own system with YAML manifests in the **infra-schema** repository.\n\n<!--more-->\n\n**infra-schema** is one of the main components of th2. \nIt is a repository, which defines your testing system architecture, boxes and connections inside it.\n\nRepository structure:\n- üìÅ boxes\n- üìÅ dictionaries\n- üìÅ links\n- üìÅ core\n- üìÑ infra-mgr-config.yml\n\n## Boxes\n\n`boxes` folder contains configuration for components of `modules` group. \nThe configuration files are Custom Resource manifests for Kubernetes. \nth2 provides a number of <term term=\"Custom resource\">Custom Resource</term> kinds, but for boxes configuration you will need only `Th2Box` kind.\n\nYou can see the structure of the manifest below.\n\n```yaml\napiVersion: th2.exactpro.com/v1\nkind: Th2Box\nmetadata:\n  name: demo-conn1\nspec:\n  image-name: ghcr.io/th2-net/th2-conn-fix\n  image-version: 3.2.1 \n  type: th2-conn\n  custom-config: # Component custom config\n  pins: # Array of pins\n  extended-settings: # Low level settings for component\n```\n\n`apiVersion`, `kind`, `metadata` are the base fields for the Kubernetes object manifest. \nThe real differences from usual manifests are in the `spec` field.\n\n`image-name` is a link to the Docker image of the box in the registry.\n`image-version` specifies the version of the image.\n\n`type` and `custom-config` fields are specific to each box. \nYou can find more information in the GitHub repository of the needed box.\n\n`pins` are some kind of ports, that used for interaction with other components. \nMore details on [pins](pins) and [links](links) can be found in corresponding documentation sections.\n\n`extended-settings` defines low level configuration of the box (e.g. hardware limits).\n\n```yaml\nextended-settings:\n  service:\n    enabled: true\n    type: NodePort\n    endpoints:\n      - name: grpc\n        targetPort: 8080\n        nodePort: 31179\n  envVariables:\n    JAVA_TOOL_OPTIONS: '-XX:+ExitOnOutOfMemoryError -XX:+UseContainerSupport -XX:MaxRAMPercentage=85'\n  resources:\n    limits:\n      memory: 600Mi\n      cpu: 200m\n    requests:\n      memory: 100Mi\n      cpu: 50m\n```\n\n## Dictionaries\n\n`dictionaries` folder contains manifests of `Th2Dictionary` kind. \nIt contains `data` field, that you can fill with any static data you want.\n\nIf you want to use dictionary in the box, you should create a [dictionary link](links).\n\n```yaml\napiVersion: th2.exactpro.com/v1\nkind: Th2Dictionary\nmetadata:\n  name: fix50-generic\nspec:\n  data: |-\n    Anything you want\n```\n\n## Links\n\n`links` folder contains manifests for `Th2Link` kind. \nIt is an entity for connecting pins. \nA full guide is available on the [Links](links) page.\n\n```yaml\napiVersion: th2.exactpro.com/v1\nkind: Th2Link\nmetadata:\n  name: links\nspec:\n  dictionaries-relation: # Array of links between box and dictionary\n  boxes-relation: # Array of links between several boxes\n    router-mq: # For connecting via RabbitMQ\n    router-grpc: # For connecting via gRPC\n```\n\n## Core\n\n`core` folder contains manifests for components, which is a part of the core of the *Schema Environment*. \n\nThere are special kinds for these components:\n- `Th2Estore` - box for events store\n- `Th2Mstore` - a box for message store\n- `Th2CoreBox` - any other box in th2 Core\n\nThese kinds help **infra-mgr** to identify the box definitions, and thus, are necessary for creating environments.\n\n## Infra manager configuration\n\n`infra-mgr-config.yml` defines the behavior of the **infra-mgr** with a current *Schema environment*.\n\nIt is also the manifest. There is a special `SettingsFile` kind for it.\n\nThe main field is `k8s-propagation`. It can contain one of four values:\n- `off`  - no synchronization will be done \n- `deny` - no synchronization will be done and associated namespace will be removed from Kubernetes\n- `sync` - synchronizes repository changes with Kubernetes\n- `rule` - synchronizes repository changes with Kubernetes and watches resource changes in Kubernetes and brings them back to repository state\n\n![infra-mgr behaviour](./mgr-behaviour.png)\n\nFull `infra-mgr-config.yml` configuration:\n\n```yaml\nkind: SettingsFile\nmetadata:\n  name: infra-mgr-config\nspec:\n  k8s-propagation: off\n  th2BoxConfig:\n    logging:\n      logLevelTh2: INFO\n      logLevelRoot: INFO\n    mqRouter:\n      connectionTimeout: \"-1\"\n      connectionCloseTimeout: \"10000\"\n      maxRecoveryAttempts: \"5\"\n      minConnectionRecoveryTimeout: \"10000\"\n      maxConnectionRecoveryTimeout: \"10000\"\n      prefetchCount: \"10\"\n    grpcRouter:\n      workers: \"5\"\n    cradleManager:\n      cradleMaxEventBatchSize: \"1048576\"\n      cradleMaxMessageBatchSize: \"1048576\"\n      timeout: \"5000\"\n      pageSize: \"5000\"\n```\n\nPossible `logLevel` values:\n- `OFF`\n- `FATAL`\n- `ERROR`\n- `WARN`\n- `INFO`\n- `DEBUG`\n- `TRACE`\n- `ALL`\n\n`mqRouter` fields mostly configures retry functionality. \nThe `prefetchCount` field specifies the number of messages to be read from RabbitMQ.\n\n<notice info>\n\nHigher values increase the throughput, but set higher memory requirements.\n\n</notice >\n","fileInfo":{"path":"versions/1-7/infrastructure/th2-infra-schema.md"},"headings":[{"anchor":"#th2-infra-schema","value":"th2-infra-schema","depth":1},{"anchor":"#boxes","value":"Boxes","depth":2},{"anchor":"#dictionaries","value":"Dictionaries","depth":2},{"anchor":"#links","value":"Links","depth":2},{"anchor":"#core","value":"Core","depth":2},{"anchor":"#infra-manager-configuration","value":"Infra manager configuration","depth":2}],"read_before":[],"continue_learning":[],"terms":[{"id":"Custom resource","title":"Custom resource","content":"<p><em>Custom resources</em> are extensions of the Kubernetes API. It is not necessarily available in a default Kubernetes installation. It represents a customization of a particular Kubernetes installation. However, many core Kubernetes functions are now built using CRs, making Kubernetes more modular.</p>\n<p>You can find more information about <em>Custom resources</em> <a href=\"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n"}],"related":[{"name":"th2-net/th2-infra","icon":"mdi-github","href":"https://github.com/th2-net/th2-infra"},{"name":"th2-net/th2-infra-schema-demo","icon":"mdi-github","href":"https://github.com/th2-net/th2-infra"}],"hide_releases":null,"_githubRepository":null}},"context":{}}