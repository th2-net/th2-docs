{"hash":"42e3905f95464c88d1c3007f0efced0d0c4402cb","data":{"doc":{"title":"conn","inner_title":"","description":"conn\n\nconn (\"conn\" stands for \"connect\") component is responsible for the communication with a target system. \nThis component implements the logic of the interaction protocol, receiving and sending messages from and to the system, respectively.","content":"\n# conn\n\n**conn** (\"conn\" stands for \"connect\") component is responsible for the communication with a target system. \nThis component implements the logic of the interaction protocol, receiving and sending messages from and to the system, respectively.\n\n<!--more-->\n\n![](./th2-conn.png)\n\n## Family\n\nThere is a number of repositories on GitHub, created as a part of connectivity module implementation. \n\nThere is no universal template for the **conn** component, but you can use one of the already created **conn** repositories in [th2-net](https://github.com/th2-net) or use one of the custom protocol implementations provided there to apply it to your own version of **conn**.\n\n<notice note>\n\nSome of the **conn** repositories have `dirty` in the name. \nIt means that the component can be used for negative testing as it provides an ability to send invalid messages in order to get a protocol error.\n\n</notice>\n\n### Libraries\n\n**conn** repositories with the `core` are the libraries, which can be useful for box implementation. \n\n|Repository|Protocol(s)|\n|----------|-----------|\n|[th2-conn-dirty-tcp-core](https://github.com/th2-net/th2-conn-dirty-tcp-core) |TCP (also can be used for higher level protocols, e.g. FIX)|\n\n### Boxes\n\n[th2-net](https://github.com/th2-net) repositories with names starting with `th2-conn-` contain implementations of **conn**  for specific communication protocols. They already have docker image in the registry.\n\n|Repository|Protocol(s)|\n|----------|-----------|\n|[th2-conn-amqp](https://github.com/th2-net/th2-conn-amqp)|[AMQP](https://www.amqp.org/)|\n|[th2-conn-qfj](https://github.com/th2-net/th2-conn-qfj)|[FIX](https://www.fixtrading.org/what-is-fix/)|\n|[th2-conn-http-client](https://github.com/th2-net/th2-conn-http-client)|HTTP, HTTPS|\n|[th2-conn-http-server](https://github.com/th2-net/th2-conn-http-server)|HTTP, HTTPS|\n|[th2-conn-ws-client](https://github.com/th2-net/th2-conn-ws-client)|WebSocket|\n|[th2-conn-kafka](https://github.com/th2-net/th2-conn-kafka)|[Kafka](https://kafka.apache.org/)|\n|[th2-conn-dirty-fix](https://github.com/th2-net/th2-conn-dirty-fix)|[FIX](https://www.fixtrading.org/what-is-fix/)|\n\n### Templates\n\n**conn** repositories with the `template` in their name are the templates of boxes. You can add custom logic into these boxes. \n\n|Repository|Protocol(s)|Custom Logic|\n|----------|-----------|------------|\n|[th2-conn-ws-client-template](https://github.com/th2-net/th2-conn-http-ws-client-template)|HTTP, HTTPS, WebSocket|Authorization, Received Messages Handler, Sending Messages, etc.|\n|[th2-conn](https://github.com/th2-net/th2-conn)|[Sailfish](https://github.com/Exactpro/sailfish-core)|Allows you to create **conn** implementations based on Sailfish services|\n\n### Other\n\nSome of the public repositories related to the **conn** are not for common use, but they are still useful for the th2 ecosystem.\n\n|Repository| Description                                                                                                                                                                                                                                                                                                                                                                                                          |\n|----------|----------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|\n|[th2-grpc-conn](https://github.com/th2-net/th2-grpc-conn)| Contains a common gRPC interface for the **conn** modules. This interface can be used to control a **conn** (e.g. start or stop it). <br> The **conn** modules implementing this interface: <br> [th2-conn-qfj](https://github.com/th2-net/th2-conn-qfj) <br> [th2-conn-http-ws-client-template](https://github.com/th2-net/th2-conn-http-ws-client-template)                                                        |\n|[th2-conn-generic](https://github.com/th2-net/th2-conn-generic)| Builds [FIX](https://www.fixtrading.org/what-is-fix/), [SOUP](https://www.nasdaqtrader.com/content/technicalsupport/specifications/dataproducts/souptcp.pdf), [NTG](https://www.lseg.com/sites/default/files/content/documents/MIT203%20-%20Native%20Trading%20Gateway%20Specification%20-%20Issue%2010.4.pdf) ** conn** implementations on top of the [th2-conn](https://github.com/th2-net/th2-conn) Docker image. |\n\n## Configuration\n\nA generic configuration for **conn** is provided below. \nTo specify the `custom-config` object for a particular **conn** implementation provided as a [th2-net](https://github.com/th2-net) repository, refer to the \"Configuration\" section of its ReadMe file.\n\n```yaml\napiVersion: th2.exactpro.com/v1\nkind: Th2Box\nspec:\n  image-name: your.image.repo:42/th2-conn-template\n  image-version: <image version>\n  type: th2-conn\n  custom-config:\n      # Depends on specific th2-conn component\n  pins:\n    - name: in_raw\n      connection-type: mq\n      attributes: [\"first\", \"raw\", \"publish\", \"store\"]\n    - name: out_raw\n      connection-type: mq\n      attributes: [\"second\", \"raw\", \"publish\", \"store\"]\n    - name: to_send\n      connection-type: mq\n      attributes: [\"send\", \"parsed\", \"subscribe\"]\n```\n\n### Required pins\n\nA **conn** box has 3 types of pins:\n\n- `out_raw` - raw messages that go from **conn** to the system.\n- `in_raw` - raw messages that go from the system to **conn**.\n- `to_send` - messages that go from a user to **conn**.\n\nThe **conn** box uses a separate queue to send messages. \nIt subscribes to that pin at the start and waits for the messages. \nThe messages received from that pin will be sent to the target system. \nAlso, this component is responsible for maintaining connections and sessions in the cases where it is provided by the communication protocol. \nIt can automatically send <term term=\"heartbeat messages\">heartbeat messages</term>, logon/logout commands and requests to retransmit messages between an external system and th2.\n","fileInfo":{"path":"versions/1-7/modules/conn/_index.md"},"headings":[{"anchor":"#conn","value":"conn","depth":1},{"anchor":"#family","value":"Family","depth":2},{"anchor":"#libraries","value":"Libraries","depth":3},{"anchor":"#boxes","value":"Boxes","depth":3},{"anchor":"#templates","value":"Templates","depth":3},{"anchor":"#other","value":"Other","depth":3},{"anchor":"#configuration","value":"Configuration","depth":2},{"anchor":"#required-pins","value":"Required pins","depth":3}],"read_before":[],"continue_learning":[],"terms":[{"id":"heartbeat messages","title":"heartbeat messages","content":"<p>Heartbeat message is a periodic message generated  to indicate normal operation or to synchronize parts of a computer system</p>\n<p><a href=\"https://en.wikipedia.org/wiki/Heartbeat_(computing)\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">more details</a></p>\n"}],"related":[{"name":"th2-conn repositories in th2-net","icon":"mdi-github","href":"https://github.com/orgs/th2-net/repositories?q=th2-conn&type=all&language=&sort="}],"hide_releases":null,"_githubRepository":{"html_url":"https://github.com/th2-net/th2-conn","language":"Java","description":"","updated_at":"2022-03-18T12:13:13Z","owner":{"html_url":"https://github.com/th2-net","avatar_url":"https://avatars.githubusercontent.com/u/73948563?v=4","login":"th2-net"},"releases":[{"id":"61005015","name":"Release 3.10.1","tag_name":"v3.10.1","body":"This release contains important fixes and improvements of th2-conn integration with Sailfish services\r\n\r\n# Changed:\r\n\r\n## Library version was updated\r\n+ th2-common version is updated to 3.33.0. You can find changes [here](https://github.com/th2-net/th2-common-j/blob/6f8699bdc2d194d4f12aeb964d5d562d2fdcdf76/README.md#3330)\r\n\r\n+ kotlin version is updated to 1.5.30\r\n\r\n+ sailfish-core version is updated to 3.2.1741\r\n  + Sailfish service based on MINA decodes the message as sender during sending.\r\n    This approach is important for protocols in which a pair of messages have the same protocol message type and different structures depending on the direction \r\n\r\n# Added:\r\n\r\n+ Message sending failure reporting (creates events when an exception was thrown during sending message) \r\n\r\n+ th2_conn_incoming_msg_quantity and th2_conn_outgoing_msg_quantity metrics are produced by conn \r\n\r\n+ Option for disabling generation of an event for sent message if it has parent_event_id \r\n\r\n+ Option for configuring maxMessageBatchSize for th2 message sending to mstore (other components) \r\n\r\n+ Check for missing sequences in a batch (the error will be written in the log) \r\n\r\n# Fixed:\r\n\r\n+ Fix problem with trying to send EvolutionBatch message. Unwraps the EvolutionBatch when sending raw message \r\n\r\n+ Problem with dropped messages when the significant load was directed to conn box. The synchronization on message publication was added. \r\n\r\n+ Problem when conn was frozen during shutdown when the connection to rabbit MQ was not connected.\r\n  We donâ€™t wait for connection recovery in this case anymore ","published_at":"2022-03-04T16:07:20Z"}]}}},"context":{}}