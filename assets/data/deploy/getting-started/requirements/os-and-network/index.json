{"hash":"2c39d0f6c4e74e25e9cd96bd966a35a86b99cf6b","data":{"doc":{"__typename":"GitOpsPage","title":"OS and network","inner_title":"Operational system and network requirements","content":"\n# OS and network\n\n<!-- ## Kubernetes minimum requirements\nMachines that meet Kubernetes minimum requirements for the workers\nhttps://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#before-you-begin -->\n\n## Operational system\n\n|OS|Version|\n|---|---|\n|Ubuntu|16.04+|\n|Debian|9+|\n|CentOS|7|\n|Red Hat Enterprise Linux (RHEL)|7|\n|Fedora|25+|\n\n## Network\n\n1. Unique hostname, MAC address, and product_uuid for every node.\n2. `swap` disabled. You **MUST** disable `swap` in order for the kubelet to work properly.\n3. Full network connectivity between all machines in the cluster (public or private network).\n4. `sudo` privileges on all machines.\n5. SSH access from one device to all nodes in the system.\n\n## Kubernetes ports\n\n[Certain ports](https://kubernetes.io/docs/setup/production-environment/tools/kubeadm/install-kubeadm/#check-required-ports) are open on your machines.\n\n## Cassandra ports\n\n|Port|Type|Purpose|\n|---|---|---|\n|7000|TCP|cluster communication|\n|7001|TCP|cluster communication (SSL enabled)|\n|9042|TCP|native protocol clients|\n|7199|TCP|JMX|\n\n### Customization\n\nThe internode communication and native protocol\nports are configurable in the Cassandra Configuration File.\n\nThe JMX\nport is configurable in cassandra-env.sh (through JVM options).\n\n\n## Connectivity to repositories and registries\n\nCheck if your machine has access to the following endpoints.\n\nRepositories:\n\n- Kubernetes dashboard: `https://kubernetes.github.io/dashboard/`\n- FluxCD: `https://charts.fluxcd.io`\n- Ingress NGINX: `https://kubernetes.github.io/ingress-nginx`\n- Loki: `https://grafana.github.io/loki/charts`\n- th2: `https://th2-net.github.io`\n\n<notice note>\n\nYou can check accessibility of these links via browser by adding `/index.yaml` to the end of each link.\n\n</notice>\n\nContainer registries:\n- `ghcr.io`\n- `quay.io`\n- `docker.io`\n- `k8s.gcr.io`\n\n<!--Instructions about how to check accessibility needed--> \n\n<notice note>\n\nTo test the accessibility of container registries, the `telnet` command can be used in the terminal to connect to the `80` or `443` port.\n\nFor example:\n\n```shell\ntelnet k8s.gcr.io 443\n```\n\nThe command will return the following output:\n\n```shell\nTrying 142.251.9.82...\nConnected to googlecode.l.googleusercontent.com.\nEscape character is '^]'.\n```\n\n</notice>\n","fileInfo":{"path":"getting-started/requirements/os-and-network.md"},"headings":[{"anchor":"#os-and-network","value":"OS and network","depth":1},{"anchor":"#operational-system","value":"Operational system","depth":2},{"anchor":"#network","value":"Network","depth":2},{"anchor":"#kubernetes-ports","value":"Kubernetes ports","depth":2},{"anchor":"#cassandra-ports","value":"Cassandra ports","depth":2},{"anchor":"#customization","value":"Customization","depth":3},{"anchor":"#connectivity-to-repositories-and-registries","value":"Connectivity to repositories and registries","depth":2}],"read_before":[],"continue_learning":[],"terms":[],"related":[]}},"context":{}}