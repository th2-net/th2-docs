(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{"/y4/":function(e,t,n){"use strict";n.r(t);var s=n("7uw+"),o=n("UQSp"),a=n("oCYn");function r(e){return(r="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}a.default.config.optionMergeStrategies;var i={VueRemarkRoot:o.a},c=function(e){var t=e.options.components=e.options.components||{},n=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===r(i[e])&&"function"==typeof i[e].render||"function"==typeof i[e]&&"function"==typeof i[e].options.render?t[e]=i[e]:n[e]=function(){return i[e]}}))},m=a.default.config.optionMergeStrategies,l="__vueRemarkFrontMatter",p={excerpt:null,weight:15,"tree-title":"infra-operator",readme:"https://raw.githubusercontent.com/th2-net/th2-infra-operator/master/README.md",title:"infra-operator"};var u=function(e){e.options[l]&&(e.options[l]=p),a.default.util.defineReactive(e.options,l,p),e.options.computed=m.computed({$frontmatter:function(){return e.options[l]}},e.options.computed)},h=Object(s.a)({},(function(){var e=this,t=e.$createElement,n=e._self._c||t;return n("VueRemarkRoot",[n("h1",{attrs:{id:"infra-operator"}},[n("a",{attrs:{href:"#infra-operator","aria-hidden":"true"}},[e._v("#")]),e._v("infra-operator")]),n("p",[e._v("The infra-operator is a java implementation of Kubernetes \n"),n("a",{attrs:{href:"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/#custom-controllers",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("custom resource controller")]),e._v(". \nIt is part of "),n("em",[e._v("th2 infrastructure")]),e._v(". Together with "),n("a",{attrs:{href:"https://github.com/th2-net/th2-infra-mgr",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("infra-mgr")]),e._v(" and \n"),n("a",{attrs:{href:"https://github.com/fluxcd/helm-operator",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("helm-operator")]),e._v(" \nit ensures the synchronization of custom resource files from GitHub and the actual resources \nin Kubernetes. The infra-operator uses "),n("a",{attrs:{href:"https://fabric8.io/guide/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("fabric8")]),e._v(" library for communication with Kubernetes. ")]),n("p",[n("a",{attrs:{href:"https://kubernetes.io/docs/concepts/extend-kubernetes/api-extension/custom-resources/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Custom resources")]),e._v(" \nallow us to extend Kubernetes API with custom components specifically designed for our needs. \nHowever, since such custom components are not part of the default Kubernetes installation, it is infra-operator's \ntask to look over them. The infra-operator monitors 5 kind of custom resources, which are defined in \n"),n("a",{attrs:{href:"https://github.com/th2-net/th2-infra/blob/master/values/CRD",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-infra")]),e._v(" repository.")]),n("p",[e._v("For more information about custom resources used in th2 and their configuration, \nplease refer to "),n("a",{attrs:{href:"https://github.com/th2-net/th2-documentation",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-documentation")])]),n("p",[e._v("The infra-operator is also responsible for queues and users permission management on "),n("a",{attrs:{href:"https://www.rabbitmq.com/documentation.html",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("RabbitMQ")]),e._v(".")]),n("p",[e._v("The list below covers the main duties and objectives of this component.")]),n("h4",{attrs:{id:"main-objectives"}},[n("a",{attrs:{href:"#main-objectives","aria-hidden":"true"}},[e._v("#")]),e._v("Main objectives")]),n("ul",[n("li",[e._v("It monitors Kubernetes events related to the "),n("em",[e._v("Th2CustomResources")]),e._v(" and generates or modifies the corresponding Helm Releases.")]),n("li",[e._v("Based on the config map "),n("code",{pre:!0},[e._v("rabbit-mq-app-config")]),e._v(" which is deployed by infra-mgr, it creates Vhost in RabbitMQ for every schema namespace.")]),n("li",[e._v("For each Vhost it creates a user in RabbitMQ and configures its permissions. ")]),n("li",[e._v("Based on the pins described in CRs, and the pins described in "),n("em",[e._v("Th2Link")]),e._v(" resources it declares queues in RabbitMQ. ")]),n("li",[e._v("It binds queues in RabbitMQ according to "),n("em",[e._v("Th2Link")]),e._v(" resources. ")]),n("li",[e._v("Generate RabbitMQ configs for each resource that needs it.")]),n("li",[e._v("Generate "),n("a",{attrs:{href:"https://grpc.io/docs/",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("gRPC")]),e._v(" configs for each resource that needs it.")])]),n("h2",{attrs:{id:"configuration"}},[n("a",{attrs:{href:"#configuration","aria-hidden":"true"}},[e._v("#")]),e._v("Configuration")]),n("p",[e._v("The infra-operator configuration is given with infra-operator.yml file that should be on the classpath of the application")]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-shell"},[n("code",{staticClass:"language-shell"},[e._v("yaml\nnamespacePrefixes:\n  - namespace-\n  - prefixes-\n"),n("span",{staticClass:"token comment"},[e._v("# these prefixes are used to filter namespaces that infra-operator will manage as a schema")]),e._v("\n\nchart:\n"),n("span",{staticClass:"token comment"},[e._v("# this section includes information about git or helm repository as a source of helm charts")]),e._v("\n"),n("span",{staticClass:"token comment"},[e._v("# you can specify either git or helm repository")]),e._v("\n\n  "),n("span",{staticClass:"token comment"},[e._v("# git repository parameters ")]),e._v("\n  git: git@some.server.com:some/repository\n  "),n("span",{staticClass:"token comment"},[e._v("# git repository URL for helm charts used by Th2 Custom Resources")]),e._v("\n  \n  ref: branch\n  "),n("span",{staticClass:"token comment"},[e._v("# branch for helm charts")]),e._v("\n\n  path: /path/to/charts\n  "),n("span",{staticClass:"token comment"},[e._v("# repository path for charts")]),e._v("\n\n  "),n("span",{staticClass:"token comment"},[e._v("# helm repository parameters ")]),e._v("\n  repository: https://helm.server.com/some/repository\n  "),n("span",{staticClass:"token comment"},[e._v("# helm repository URL for helm charts used by Th2 Custom Resources")]),e._v("\n\n  name: components\n  "),n("span",{staticClass:"token comment"},[e._v("# the name of the Helm chart without an alias")]),e._v("\n\n  version: "),n("span",{staticClass:"token number"},[e._v("3.2")]),e._v(".0\n  "),n("span",{staticClass:"token comment"},[e._v("# the targeted Helm chart version")]),e._v("\n\nrabbitMQManagement:\n  host: "),n("span",{staticClass:"token function"},[e._v("host")]),e._v("\n  "),n("span",{staticClass:"token comment"},[e._v("# RabbitMQ host used for managing vHosts and users")]),e._v("\n  \n  port: "),n("span",{staticClass:"token number"},[e._v("8080")]),e._v("\n  "),n("span",{staticClass:"token comment"},[e._v("# RabbitMQ port")]),e._v("\n  \n  username: username\n  "),n("span",{staticClass:"token comment"},[e._v("# RabbitMQ management username")]),e._v("\n  \n  password: password\n  "),n("span",{staticClass:"token comment"},[e._v("# password for management user")]),e._v("\n  \n  persistence: "),n("span",{staticClass:"token boolean"},[e._v("true")]),e._v("\n  "),n("span",{staticClass:"token comment"},[e._v("# determines if the RabbitMQ resources are persistent or not")]),e._v("\n  \n  schemaPermissions:\n  "),n("span",{staticClass:"token comment"},[e._v("# this section describes what permissions schema RabbitMQ user will have on its own resources")]),e._v("\n  "),n("span",{staticClass:"token comment"},[e._v("# see RabbitMQ documentation to find out how permissions are described")]),e._v("\n\n    configure: pattern\n    "),n("span",{staticClass:"token comment"},[e._v("# configuration permissions on resources")]),e._v("\n    \n    read: pattern\n    "),n("span",{staticClass:"token comment"},[e._v("# read permission on resources")]),e._v("\n    \n    write: pattern\n    "),n("span",{staticClass:"token comment"},[e._v("# write permission on resources")]),e._v("\n    \nconfigMaps:\n"),n("span",{staticClass:"token comment"},[e._v("# this section contains names of the ConfigMaps that are mounted in the boxes")]),e._v("\n\n  rabbitMQ: rabbit-mq-config-map\n  "),n("span",{staticClass:"token comment"},[e._v("# RabbitMQ server connectivity ConfigMap")]),e._v("\n\nk8sUrl: kubernetes-address\n"),n("span",{staticClass:"token comment"},[e._v("# address for kubernetes cluster. ")]),e._v("\n"),n("span",{staticClass:"token comment"},[e._v("# this will be used as host in gRPC config for boxes that are running in node network or externally")]),e._v("\n\nschemaSecrets:\n"),n("span",{staticClass:"token comment"},[e._v("# this section contains secret names that are mounted in the boxes")]),e._v("\n\n  rabbitMQ: rabbitmq\n  "),n("span",{staticClass:"token comment"},[e._v("# secret name to connect to RabbitMQ server")]),e._v("\n\n  cassandra: cassandra\n  "),n("span",{staticClass:"token comment"},[e._v("# secret name to connect to cassandra database")]),e._v("\nimagePullSecrets:\n  "),n("span",{staticClass:"token comment"},[e._v("# this section contains list of secrets to be used for pulling images")]),e._v("\n  - name-for-secret\n  - name-for-another-secret\ningress:\n  "),n("span",{staticClass:"token comment"},[e._v("# this section can include custom configurations for ingress.")]),e._v("\n  "),n("span",{staticClass:"token comment"},[e._v("# section is of an object type, meaning it can contain any structure and any fields ")]),e._v("\n  "),n("span",{staticClass:"token comment"},[e._v("# section will be passed to final config exactly ass described here")]),e._v("\n  "),n("span",{staticClass:"token comment"},[e._v("# example configuration can include: ")]),e._v("\n  annotations:\n    default:\n      key: value\n    extra:\n      key: value\n  host: ingress-host-name\n  "),n("span",{staticClass:"token comment"},[e._v("# host name that will be used inside ingress rules")]),e._v("\n  ingressClass: ingress-class-type\n  "),n("span",{staticClass:"token comment"},[e._v("# ingress class  will indicate what kind of ingress to use")]),e._v("\nopenshift:\n  "),n("span",{staticClass:"token comment"},[e._v("# this section indicates whether application is run in openshift environment or not")]),e._v("\n  enabled: true/false\n  "),n("span",{staticClass:"token comment"},[e._v("#if not indicated default values is false")]),e._v("\n")])])])])}),[],!1,null,null,null);"function"==typeof c&&c(h),"function"==typeof u&&u(h);t.default=h.exports},UQSp:function(e,t,n){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}}}]);