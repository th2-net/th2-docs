(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{UQSp:function(t,n,s){"use strict";n.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},ueJ1:function(t,n,s){"use strict";s.r(n);var a=s("7uw+"),o=s("UQSp"),e=s("oCYn");function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}e.default.config.optionMergeStrategies;var c={VueRemarkRoot:o.a},p=function(t){var n=t.options.components=t.options.components||{},s=t.options.computed=t.options.computed||{};Object.keys(c).forEach((function(t){"object"===i(c[t])&&"function"==typeof c[t].render||"function"==typeof c[t]&&"function"==typeof c[t].options.render?n[t]=c[t]:s[t]=function(){return c[t]}}))},u=e.default.config.optionMergeStrategies,v="__vueRemarkFrontMatter",l={excerpt:null,weight:20,title:"Usage"};var _=function(t){t.options[v]&&(t.options[v]=l),e.default.util.defineReactive(t.options,v,l),t.options.computed=u.computed({$frontmatter:function(){return t.options[v]}},t.options.computed)},r=Object(a.a)({},(function(){var t=this,n=t.$createElement,s=t._self._c||n;return s("VueRemarkRoot",[s("h1",{attrs:{id:"usage"}},[s("a",{attrs:{href:"#usage","aria-hidden":"true"}},[t._v("#")]),t._v("Usage")]),s("p",[t._v("To implement a "),s("strong",[t._v("codec")]),t._v(" using this library you need to:")]),s("ol",[s("li",[t._v("add the following repositories into "),s("code",{pre:!0},[t._v("build.gradle")]),t._v(":")])]),s("div",{staticClass:"remark-highlight"},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("maven "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    url "),s("span",{staticClass:"token string"},[t._v("'https://s01.oss.sonatype.org/content/repositories/snapshots/'")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\nmaven "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    url "),s("span",{staticClass:"token string"},[t._v("'https://s01.oss.sonatype.org/content/repositories/releases/'")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),s("copy-code-btn")],1),s("ol",{attrs:{start:"2"}},[s("li",[s("p",[t._v("add dependency on "),s("code",{pre:!0},[t._v("com.exactpro.th2:codec:4.6.0")]),t._v(" into "),s("code",{pre:!0},[t._v("build.gradle")])])]),s("li",[s("p",[t._v("set main class to "),s("code",{pre:!0},[t._v("com.exactpro.th2.codec.MainKt")])])])]),s("p",[t._v("This is usually done by using Gradle application plugin where you can set the main class like this:")]),s("div",{staticClass:"remark-highlight"},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[t._v("application "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n   mainClassName "),s("span",{staticClass:"token string"},[t._v("'com.exactpro.th2.codec.MainKt'")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),s("copy-code-btn")],1),s("ol",{attrs:{start:"4"}},[s("li",[t._v("implement "),s("code",{pre:!0},[t._v("codec")]),t._v(" itself by implementing IPipelineCodec interface:")])]),s("div",{staticClass:"remark-highlight"},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[s("span",{staticClass:"token keyword"},[t._v("interface")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("IPipelineCodec")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" AutoCloseable "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    fun "),s("span",{staticClass:"token function"},[t._v("encode")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("TODO")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string gstring"},[t._v('"encode(messageGroup) method is not implemented"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),s("span",{staticClass:"token function"},[t._v("encode")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup"),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" context"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IReportingContext"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("encode")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),s("span",{staticClass:"token function"},[t._v("decode")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("TODO")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string gstring"},[t._v('"decode(messageGroup) method is not implemented"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),s("span",{staticClass:"token function"},[t._v("decode")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup"),s("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" context"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IReportingContext"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("decode")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    override fun "),s("span",{staticClass:"token function"},[t._v("close")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),s("copy-code-btn")],1),s("ol",{attrs:{start:"5"}},[s("li",[t._v("implement a factory for it, using the IPipelineCodecFactory interface:")])]),s("div",{staticClass:"remark-highlight"},[s("pre",{staticClass:"language-groovy"},[s("code",{staticClass:"language-groovy"},[s("span",{staticClass:"token keyword"},[t._v("interface")]),t._v(" "),s("span",{staticClass:"token class-name"},[t._v("IPipelineCodecFactory")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" AutoCloseable "),s("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    val protocols"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Set"),s("span",{staticClass:"token operator"},[t._v("<")]),t._v("String"),s("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    val settingsClass"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Class"),s("span",{staticClass:"token operator"},[t._v("<")]),t._v("out IPipelineCodecSettings"),s("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    fun "),s("span",{staticClass:"token function"},[t._v("init")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("dictionary"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" InputStream"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Unit "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),s("span",{staticClass:"token function"},[t._v("TODO")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token string gstring"},[t._v('"not implemented"')]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),s("span",{staticClass:"token function"},[t._v("init")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("pipelineCodecContext"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IPipelineCodecContext"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Unit "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" pipelineCodecContext"),s("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("DictionaryType"),s("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("MAIN"),s("span",{staticClass:"token punctuation"},[t._v("]")]),s("span",{staticClass:"token punctuation"},[t._v(".")]),s("span",{staticClass:"token function"},[t._v("use")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(":")]),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("init"),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),s("span",{staticClass:"token function"},[t._v("create")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("settings"),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IPipelineCodecSettings"),s("span",{staticClass:"token operator"},[t._v("?")]),t._v(" "),s("span",{staticClass:"token operator"},[t._v("=")]),t._v(" null"),s("span",{staticClass:"token punctuation"},[t._v(")")]),s("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IPipelineCodec\n    override fun "),s("span",{staticClass:"token function"},[t._v("close")]),s("span",{staticClass:"token punctuation"},[t._v("(")]),s("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),s("span",{staticClass:"token punctuation"},[t._v("{")]),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),s("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),s("copy-code-btn")],1),s("p",[s("strong",[t._v("NOTE")]),t._v(": both init methods have default implementations.\nOne of them must be overridden in your factory implementation.\nIf your "),s("strong",[t._v("codec")]),t._v(" needs the MAIN dictionary, only you can override the "),s("code",{pre:!0},[t._v("init(dictionary: InputStream)")]),t._v(" method.\nOtherwise, you should override the "),s("code",{pre:!0},[t._v("init(pipelineCodecContext: IPipelineCodecContext)")]),t._v(" method.")]),s("p",[s("strong",[t._v("IMPORTANT")]),t._v(": implementation should be loadable via Java's built-in service loader.")]),s("ol",{attrs:{start:"6"}},[s("li",[t._v("That's it! Your "),s("strong",[t._v("codec")]),t._v(" is now complete.")])])])}),[],!1,null,null,null);"function"==typeof p&&p(r),"function"==typeof _&&_(r);n.default=r.exports}}]);