(window.webpackJsonp=window.webpackJsonp||[]).push([[55],{N2M8:function(t,s,a){"use strict";a.r(s);var n=a("7uw+"),e=a("UQSp"),o=a("oCYn");function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}o.default.config.optionMergeStrategies;var c={VueRemarkRoot:e.a},p=function(t){var s=t.options.components=t.options.components||{},a=t.options.computed=t.options.computed||{};Object.keys(c).forEach((function(t){"object"===i(c[t])&&"function"==typeof c[t].render||"function"==typeof c[t]&&"function"==typeof c[t].options.render?s[t]=c[t]:a[t]=function(){return c[t]}}))},r=o.default.config.optionMergeStrategies,v="__vueRemarkFrontMatter",l={excerpt:null,"tree-title":"codec",related:[{name:"th2-net/th2-codec",icon:"mdi-github",href:"https://github.com/th2-net/th2-codec"}],weight:10,title:"th2-codec"};var _=function(t){t.options[v]&&(t.options[v]=l),o.default.util.defineReactive(t.options,v,l),t.options.computed=r.computed({$frontmatter:function(){return t.options[v]}},t.options.computed)},u=Object(n.a)({},(function(){var t=this,s=t.$createElement,n=t._self._c||s;return n("VueRemarkRoot",[n("h1",{attrs:{id:"th2-codec"}},[n("a",{attrs:{href:"#th2-codec","aria-hidden":"true"}},[t._v("#")]),t._v("th2-codec")]),n("h2",{attrs:{id:"overview"}},[n("a",{attrs:{href:"#overview","aria-hidden":"true"}},[t._v("#")]),t._v("Overview")]),n("p",[t._v("The "),n("strong",[t._v("codec")]),t._v(" is a component responsible for transforming "),n("term",{attrs:{term:"message"}},[t._v("messages")]),t._v(" from human-readable format into a format of a corresponding protocol and vice versa. \nIt contains the main logic for encoding and decoding messages. \nThe "),n("strong",[t._v("codec")]),t._v(" usually uses "),n("term",{attrs:{term:"dictionary"}},[t._v("dictionary")]),t._v(" to decode and encode messages. \nDictionaries contain message structures, fields and values that "),n("strong",[t._v("codec")]),t._v(" can decode. ")],1),n("h3",{attrs:{id:"encoding"}},[n("a",{attrs:{href:"#encoding","aria-hidden":"true"}},[t._v("#")]),t._v("Encoding")]),n("p",[t._v("During encoding, "),n("strong",[t._v("codec")]),t._v(" replaces each parsed message of the supported protocols in a message group with a raw one, by encoding parsed message content.")]),n("p",[t._v("NOTE: "),n("strong",[t._v("codec")]),t._v(" can merge content of subsequent raw messages into a resulting raw message (e.g. when a "),n("strong",[t._v("codec")]),t._v(" encodes only a transport layer and its payload is already encoded).")]),n("h3",{attrs:{id:"decoding"}},[n("a",{attrs:{href:"#decoding","aria-hidden":"true"}},[t._v("#")]),t._v("Decoding")]),n("p",[t._v("During decoding "),n("strong",[t._v("codec")]),t._v(" must replace each raw message in a message group with a parsed one by decoding raw message content. \nIf an exception was thrown, all raw messages will be replaced with "),n("code",{pre:!0},[t._v("th2-codec-error")]),t._v(" parsed messages.")]),n("p",[t._v("NOTE: "),n("strong",[t._v("codec")]),t._v(" can replace a raw message with a parsed message followed by several raw messages (e.g. when a "),n("strong",[t._v("codec")]),t._v(" decodes only a transport layer it can produce a parsed message for the transport layer and several raw messages for its payload).")]),n("p",[t._v("The schema below describes encoding/decoding processes. ")]),n("p",[n("g-image",{attrs:{src:a("VtWb")}})],1),n("ul",[n("li",[n("p",[n("code",{pre:!0},[t._v("raw")]),t._v(" - "),n("term",{attrs:{term:"pin"}},[t._v("pin")]),t._v(" configuration item, message passing through this pin for processing is in a machine-readable format, ready to be sent or received via according protocol or being decoded.")],1)]),n("li",[n("p",[n("code",{pre:!0},[t._v("parsed")]),t._v(" - pin configuration item, message passing through this pin for processing is in a human-readable format, used in th2.")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("encode")]),t._v(" - pin configuration item, message passing through this pin will be translated from parsed to raw.")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("decode")]),t._v(" - pin configuration item, message passing through this pin will be translated from raw to parsed.")])])]),n("p",[t._v("Example of a raw message (FIX protocol):")]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-shell"},[n("code",{staticClass:"language-shell"},[n("span",{staticClass:"token assign-left variable"},[t._v("8")]),n("span",{staticClass:"token operator"},[t._v("=")]),t._v("FIXT.1.19"),n("span",{staticClass:"token operator"},[t._v("=")]),n("span",{staticClass:"token number"},[t._v("6835")]),n("span",{staticClass:"token operator"},[t._v("=")]),t._v("034"),n("span",{staticClass:"token operator"},[t._v("=")]),n("span",{staticClass:"token number"},[t._v("159049")]),n("span",{staticClass:"token operator"},[t._v("=")]),t._v("fix-client156"),n("span",{staticClass:"token operator"},[t._v("=")]),t._v("fix-server152"),n("span",{staticClass:"token operator"},[t._v("=")]),n("span",{staticClass:"token number"},[t._v("20220608")]),t._v("-13:14:37.58110"),n("span",{staticClass:"token operator"},[t._v("=")]),t._v("043\n")])])]),n("p",[t._v("Example of a parsed message (FIX protocol):")]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-json"},[n("code",{staticClass:"language-json"},[n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n  "),n("span",{staticClass:"token property"},[t._v('"metadata"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),n("span",{staticClass:"token property"},[t._v('"id"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      "),n("span",{staticClass:"token property"},[t._v('"connectionId"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),n("span",{staticClass:"token property"},[t._v('"sessionAlias"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"fix-server1"')]),t._v("\n      "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n      "),n("span",{staticClass:"token property"},[t._v('"sequence"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"1653493560372614018"')]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n      "),n("span",{staticClass:"token property"},[t._v('"subsequence"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("\n        "),n("span",{staticClass:"token number"},[t._v("1")]),t._v("\n      "),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),n("span",{staticClass:"token property"},[t._v('"timestamp"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"2022-06-08T13:14:37.582Z"')]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),n("span",{staticClass:"token property"},[t._v('"messageType"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"Heartbeat"')]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),n("span",{staticClass:"token property"},[t._v('"protocol"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"FIX"')]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n  "),n("span",{staticClass:"token property"},[t._v('"fields"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    "),n("span",{staticClass:"token property"},[t._v('"trailer"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      "),n("span",{staticClass:"token property"},[t._v('"messageValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),n("span",{staticClass:"token property"},[t._v('"fields"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n          "),n("span",{staticClass:"token property"},[t._v('"CheckSum"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),n("span",{staticClass:"token property"},[t._v('"simpleValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"043"')]),t._v("\n          "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n        "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n      "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n    "),n("span",{staticClass:"token property"},[t._v('"header"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n      "),n("span",{staticClass:"token property"},[t._v('"messageValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n        "),n("span",{staticClass:"token property"},[t._v('"fields"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n          "),n("span",{staticClass:"token property"},[t._v('"BeginString"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),n("span",{staticClass:"token property"},[t._v('"simpleValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"FIXT.1.1"')]),t._v("\n          "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),n("span",{staticClass:"token property"},[t._v('"SenderCompID"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),n("span",{staticClass:"token property"},[t._v('"simpleValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"fix-client1"')]),t._v("\n          "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),n("span",{staticClass:"token property"},[t._v('"SendingTime"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),n("span",{staticClass:"token property"},[t._v('"simpleValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"2022-06-08T13:14:37.581"')]),t._v("\n          "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),n("span",{staticClass:"token property"},[t._v('"TargetCompID"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),n("span",{staticClass:"token property"},[t._v('"simpleValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"fix-server1"')]),t._v("\n          "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),n("span",{staticClass:"token property"},[t._v('"MsgType"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),n("span",{staticClass:"token property"},[t._v('"simpleValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"0"')]),t._v("\n          "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),n("span",{staticClass:"token property"},[t._v('"MsgSeqNum"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),n("span",{staticClass:"token property"},[t._v('"simpleValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"1590"')]),t._v("\n          "),n("span",{staticClass:"token punctuation"},[t._v("}")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n          "),n("span",{staticClass:"token property"},[t._v('"BodyLength"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n            "),n("span",{staticClass:"token property"},[t._v('"simpleValue"')]),n("span",{staticClass:"token operator"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"68"')]),t._v("\n          "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n        "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n      "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])])]),n("h2",{attrs:{id:"family"}},[n("a",{attrs:{href:"#family","aria-hidden":"true"}},[t._v("#")]),t._v("Family")]),n("p",[t._v("There are 3 types of "),n("strong",[t._v("codec")]),t._v("-related repositories.")]),n("ul",[n("li",[n("term",{attrs:{term:"box"}},[t._v("Box")]),t._v(" - use it to translate messages from raw to parsed and back (the name of repository contains the protocol which is used).\n\n")],1),n("li",[n("p",[t._v("Library - use it to build your own "),n("strong",[t._v("codec")]),t._v(" component.")])]),n("li",[n("p",[t._v("Build script collection - use it to translate messages from raw to parsed (and back) with re-using of Sailfish code (see protocols in Readme files of the repository). SEE ALSO: "),n("a",{attrs:{href:"https://exactpro.com/test-tools/sailfish",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("Sailfish")]),t._v(".")])])]),n("h3",{attrs:{id:"box-repositories-list"}},[n("a",{attrs:{href:"#box-repositories-list","aria-hidden":"true"}},[t._v("#")]),t._v("Box repositories list:")]),n("div",{staticClass:"v-sheet v-sheet--outlined elevation-2 my-5"},[n("div",{staticClass:"v-data-table"},[n("div",{staticClass:"v-data-table__wrapper"},[n("table",[n("thead",[n("tr",[n("th",[t._v("Box repositories")]),n("th",[t._v("Type")]),n("th",[t._v("Comments")])])]),n("tbody",[n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-grpc",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-grpc")])]),n("td",[t._v("Box (WIP)")]),n("td",[n("code",{pre:!0},[t._v("codec")]),t._v(" for gRPC protocol")])]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-qfj",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-qfj")])]),n("td",[t._v("Box (WIP)")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-open-api",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-open-api")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-xml-via-xsd",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-xml-via-xsd")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-conn-http-ws-client-template",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-conn-http-ws-client-template")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-moldudp64",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-moldudp64")])]),n("td",[t._v("Box(WIP)")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-xml",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-xml")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-json",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-json")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-http",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-http")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-html",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-html")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-hand",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-hand")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-hand-html",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-hand-html")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-csv",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-csv")])]),n("td",[t._v("Box")]),n("td")]),n("tr",[n("td",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-fix-orchestra",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-fix-orchestra")])]),n("td",[t._v("Box")]),n("td")])])])])])]),n("h3",{attrs:{id:"library-repositories"}},[n("a",{attrs:{href:"#library-repositories","aria-hidden":"true"}},[t._v("#")]),t._v("Library repositories:")]),n("ul",[n("li",[n("p",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec")]),t._v(" — a common "),n("strong",[t._v("codec")]),t._v(" library with basic functionalities of subscribing/publishing to message queues and loading "),n("strong",[t._v("codec")]),t._v(" settings; all "),n("strong",[t._v("codecs")]),t._v(" written specifically for th2 are based on this library.")])]),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/th2-net/th2-grpc-codec",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-grpc-codec")]),t._v(" - library containing gRPC interface for "),n("strong",[t._v("th2-codec")]),t._v(" library. This interface can be used to encode/decode messages via RPC call. ")])]),n("li",[n("p",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-sailfish",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-sailfish")]),t._v(" - all "),n("strong",[t._v("codecs")]),t._v(" that use Sailfish as a library are based on this library.")])])]),n("h3",{attrs:{id:"build-script-collection"}},[n("a",{attrs:{href:"#build-script-collection","aria-hidden":"true"}},[t._v("#")]),t._v("Build script collection:")]),n("p",[n("a",{attrs:{href:"https://github.com/th2-net/th2-codec-generic",target:"_blank",rel:"nofollow noopener noreferrer"}},[t._v("th2-net/th2-codec-generic")]),t._v(" - a repository that builds FAST, FIX, ITCH, NTG, and SOUP "),n("strong",[t._v("codecs")]),t._v(" using their Sailfish implementation and "),n("code",{pre:!0},[t._v("th2-codec-sailsfish")]),t._v(" as a base.")]),n("p",[t._v("You can use a link to a docker image of needed "),n("strong",[t._v("codec")]),t._v(" from its GitHub repository to deploy it using "),n("strong",[t._v("th2-infra")]),t._v(".")]),n("h2",{attrs:{id:"functions"}},[n("a",{attrs:{href:"#functions","aria-hidden":"true"}},[t._v("#")]),t._v("Functions:")]),n("p",[t._v("The "),n("strong",[t._v("codec")]),t._v(" component handles message flows between components such as "),n("strong",[t._v("conn")]),t._v(", "),n("strong",[t._v("act")]),t._v(", "),n("strong",[t._v("check1")]),t._v(", "),n("strong",[t._v("read")]),t._v(" and other. \nOn the scheme below you can see an example of interaction with other th2 components.")]),n("p",[n("g-image",{attrs:{src:a("tYgp")}})],1),n("p",[t._v("The "),n("strong",[t._v("codec")]),t._v(" component has eight pins - four for the stream, and four general ones. \nFunctionality of the stream and the general pins is the same. \nA common system setup uses two data flows: 1) to and from the system, and 2) to and from data provider. \nMessages from these flows cannot be mixed. \nOne way to avoid this intersection is to use two instances of a component with four pins. \nAnother option is to configure eight pins – this allows the user to decrease the amount of required settings in "),n("strong",[t._v("infra-schema")]),t._v(" as well as resource utilization of the resulting system. \nGeneral pins are used by the data-provider component, other components are usually connected to the stream pins.")]),n("h3",{attrs:{id:"why-do-we-need-a-chain-of-codecs"}},[n("a",{attrs:{href:"#why-do-we-need-a-chain-of-codecs","aria-hidden":"true"}},[t._v("#")]),t._v("Why do we need a chain of codecs?")]),n("p",[t._v("It is a very common case when the messages you send or receive from the system have the following structure: a transport layer protocol and a payload wrapped into the transport layer. \nThe payload can be any other protocol (even another transport protocol and a different payload wrapped into it). \nAlso, sometimes different systems use the same transport protocol but with the different payload wrapped into it (e.g. HTTP + JSON, HTTP + FIX).")]),n("p",[t._v("In case you need to encode/decode a message but do not have a single "),n("strong",[t._v("codec")]),t._v(" for such case, you can reuse already implemented "),n("strong",[t._v("codecs")]),t._v(" by joining them into a chain of "),n("strong",[t._v("codecs")]),t._v(". It is also recommended for the "),n("strong",[t._v("codec")]),t._v(" to work only with a single protocol."),n("br"),t._v("\nFor example, you have HTTP, JSON and XML "),n("strong",[t._v("codec")]),t._v(". \nYou can join them together for decoding XML over HTTP or JSON over HTTP.")]),n("p",[t._v("If the "),n("strong",[t._v("codec")]),t._v(" component gets a message that does not match an expected format (a raw message of corresponding protocol to "),n("code",{pre:!0},[t._v("in_codec_decode")]),t._v(" pin and a parsed message to "),n("code",{pre:!0},[t._v("in_codec_encode")]),t._v(" pin) it will be sent through the corresponding out pins without changes.")]),n("h2",{attrs:{id:"configuration"}},[n("a",{attrs:{href:"#configuration","aria-hidden":"true"}},[t._v("#")]),t._v("Configuration:")]),n("h3",{attrs:{id:"configuration-parameters"}},[n("a",{attrs:{href:"#configuration-parameters","aria-hidden":"true"}},[t._v("#")]),t._v("Configuration parameters")]),n("p",[t._v("Config file includes the following parameters:")]),n("ul",[n("li",[n("p",[n("code",{pre:!0},[t._v("apiVersion")]),t._v(" - API Kubernetes version used to create an object, the only available value - "),n("code",{pre:!0},[t._v("th2.exactpro.com/v1")]),t._v(".")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("kind")]),t._v("- kind of the created object, possible values - "),n("code",{pre:!0},[t._v("Th2Box")]),t._v(", "),n("code",{pre:!0},[t._v("Th2CoreBox")]),t._v(", "),n("code",{pre:!0},[t._v("Th2Estore")]),t._v(", "),n("code",{pre:!0},[t._v("Th2Mstore")]),t._v(", "),n("code",{pre:!0},[t._v("Th2Dictionary")]),t._v(".")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("metadata")]),t._v(" (name, UID and optional field namespace) - should be equal to the file name without extension.")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("spec")]),t._v(" - required object configuration. This seciton contains "),n("code",{pre:!0},[t._v("image-name")]),t._v(" and "),n("code",{pre:!0},[t._v("image-version")]),t._v(" (including versions), "),n("code",{pre:!0},[t._v("type")]),t._v(", "),n("code",{pre:!0},[t._v("custom-config")]),t._v(" (component-specific set of parameters), "),n("code",{pre:!0},[t._v("pins")]),t._v(" (to communicate with other boxes).")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("extended-settings: service")]),t._v(" - here we specify whether the object is available for other components, envVariables (environment variables for pod deployment), resources (amount of resources available for a Pod), etc. ")])])]),n("p",[t._v("The "),n("strong",[t._v("codec")]),t._v(" settings can be specified in "),n("code",{pre:!0},[t._v("codecSettings")]),t._v(" field of "),n("code",{pre:!0},[t._v("custom-config")]),t._v(". ")]),n("p",[t._v("For example:")]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-yaml"},[n("code",{staticClass:"language-yaml"},[n("span",{staticClass:"token key atrule"},[t._v("apiVersion")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" th2.exactpro.com/v1\n"),n("span",{staticClass:"token key atrule"},[t._v("kind")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Th2Box\n"),n("span",{staticClass:"token key atrule"},[t._v("metadata")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" codec\n"),n("span",{staticClass:"token key atrule"},[t._v("spec")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("custom-config")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n    "),n("span",{staticClass:"token key atrule"},[t._v("codecSettings")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n      "),n("span",{staticClass:"token key atrule"},[t._v("messageTypeDetection")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" BY_INNER_FIELD\n      "),n("span",{staticClass:"token key atrule"},[t._v("messageTypeField")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token string"},[t._v('"messageType"')]),t._v("\n      "),n("span",{staticClass:"token key atrule"},[t._v("rejectUnexpectedFields")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token boolean important"},[t._v("true")]),t._v("\n      "),n("span",{staticClass:"token key atrule"},[t._v("treatSimpleValuesAsStrings")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token boolean important"},[t._v("false")]),t._v("\n")])])]),n("h3",{attrs:{id:"required-pins-and-links"}},[n("a",{attrs:{href:"#required-pins-and-links","aria-hidden":"true"}},[t._v("#")]),t._v("Required pins and links")]),n("p",[t._v("The "),n("strong",[t._v("codec")]),t._v(" has four types of pins: stream encode, stream decode, general encode, general decode.")]),n("ul",[n("li",[n("p",[n("em",[t._v("stream encode / decode")]),t._v(" pins are used for all testing activities performed with th2; "),n("strong",[t._v("act")]),t._v(", "),n("strong",[t._v("conn")]),t._v(", "),n("strong",[t._v("sim")]),t._v(", "),n("strong",[t._v("recon")]),t._v(", "),n("strong",[t._v("bookchecker")]),t._v(" microservices interact with "),n("strong",[t._v("codec")]),t._v(" through the "),n("em",[t._v("stream encode / decode")]),t._v(" pins.")])]),n("li",[n("p",[n("em",[t._v("general encode / decode")]),t._v(" pins work on demand; those pins are mainly used for the th2 report UI: in order to show messages stored in Cassandra to the end user, "),n("strong",[t._v("report-data-viewer")]),t._v(" requests these messages from "),n("strong",[t._v("rpt-data-provider")]),t._v(" via "),n("strong",[t._v("codec")]),t._v(".")])])]),n("p",[t._v("Codec never mixes messages from the "),n("em",[t._v("stream")]),t._v(" and the "),n("em",[t._v("general")]),t._v(" pins.")]),n("notice",{attrs:{info:""}},[n("p",[t._v("SEE ALSO: "),n("a",{attrs:{href:"/1-7/infrastructure/th2-infra-schema/pins/#stream-and-general-codec-pins"}},[t._v("stream and general pins description")])])]),n("p",[t._v("Pins are a part of the main th2 concept. \nThey describe what are the inputs and outputs of a box. \nYou can read more about them "),n("a",{attrs:{href:"../../infrastructure/th2-infra-schema/pins/"}},[t._v("here")]),t._v(".")]),n("p",[t._v("Every "),n("strong",[t._v("codec")]),t._v(" operation is associated with 2 pins - "),n("code",{pre:!0},[t._v("subscribe")]),t._v(" and "),n("code",{pre:!0},[t._v("publish")]),t._v(". \nThe first one is used to receive messages to decode/encode, while the second one is used to send decoded/encoded messages further. ")]),n("p",[n("strong",[t._v("Typical codec has the following pins")]),t._v(": ")]),n("ul",[n("li",[n("p",[t._v("Pin for the "),n("em",[t._v("stream encoding")]),t._v(" input: "),n("code",{pre:!0},[t._v("encoder_in")]),n("code",{pre:!0},[t._v("parsed")]),n("code",{pre:!0},[t._v("subscribe")])])]),n("li",[n("p",[t._v("Pin for the "),n("em",[t._v("stream encoding")]),t._v(" output: "),n("code",{pre:!0},[t._v("encoder_out")]),n("code",{pre:!0},[t._v("raw")]),n("code",{pre:!0},[t._v("publish")])])]),n("li",[n("p",[t._v("Pin for the "),n("em",[t._v("general encoding")]),t._v(" input: "),n("code",{pre:!0},[t._v("general_encoder_in")]),n("code",{pre:!0},[t._v("parsed")]),n("code",{pre:!0},[t._v("subscribe")])])]),n("li",[n("p",[t._v("Pin for the "),n("em",[t._v("general encoding")]),t._v(" output: "),n("code",{pre:!0},[t._v("general_encoder_out")]),n("code",{pre:!0},[t._v("raw")]),n("code",{pre:!0},[t._v("publish")])])]),n("li",[n("p",[t._v("Pin for the "),n("em",[t._v("stream decoding")]),t._v(" input: "),n("code",{pre:!0},[t._v("decoder_in")]),n("code",{pre:!0},[t._v("raw")]),n("code",{pre:!0},[t._v("subscribe")])])]),n("li",[n("p",[t._v("Pin for the "),n("em",[t._v("stream decoding")]),t._v(" output: "),n("code",{pre:!0},[t._v("decoder_out")]),n("code",{pre:!0},[t._v("parsed")]),n("code",{pre:!0},[t._v("publish")])])]),n("li",[n("p",[t._v("Pin for the "),n("em",[t._v("general decoding")]),t._v(" input: "),n("code",{pre:!0},[t._v("general_decoder_in")]),n("code",{pre:!0},[t._v("raw")]),n("code",{pre:!0},[t._v("subscribe")])])]),n("li",[n("p",[t._v("Pin for the "),n("em",[t._v("general decoding")]),t._v(" output: "),n("code",{pre:!0},[t._v("general_decoder_out")]),n("code",{pre:!0},[t._v("parsed")]),n("code",{pre:!0},[t._v("publish")])])])]),n("h3",{attrs:{id:"configuration-example"}},[n("a",{attrs:{href:"#configuration-example","aria-hidden":"true"}},[t._v("#")]),t._v("Configuration example")]),n("p",[t._v("API Kubernetes documentation contains specification format for any in-built Kubernetes object. th2-specific custom resources can be found in a Readme file of the component repository.")]),n("ul",[n("li",[n("p",[n("code",{pre:!0},[t._v("name")]),t._v(" in metadata must be filled in as a box name.")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("image-name")]),t._v(" must contain a "),n("term",{attrs:{term:"link"}},[t._v("link")]),t._v(" to the image of "),n("strong",[t._v("codec")]),t._v(" on your project (preferably the last version). For one project you can have more than one "),n("strong",[t._v("codec")]),t._v(" for the same protocol.")],1)]),n("li",[n("p",[n("code",{pre:!0},[t._v("image-version")]),t._v(" should be filled with image tag (version of image in your project’s "),n("strong",[t._v("codec")]),t._v(").")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("type")]),t._v(" specifies the type of component in th2.")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("logFile")]),t._v(" - this field is not mandatory and is only filled out in case of the user requiring log information on a very detailed level.")])]),n("li",[n("p",[t._v("In "),n("code",{pre:!0},[t._v("extended-settings.resources")]),t._v(", the "),n("code",{pre:!0},[t._v("limits")]),t._v(" value must be greater than the value of "),n("code",{pre:!0},[t._v("requests")]),t._v(".")])]),n("li",[n("p",[n("code",{pre:!0},[t._v("service")]),t._v(" parameter: to make this component available to other th2 boxes, set "),n("code",{pre:!0},[t._v("service.enabled")]),t._v(" to "),n("code",{pre:!0},[t._v("true")]),t._v(".")])])]),n("p",[t._v("This configuration is a general way for deploying components in th2. \nIt contains box configuration, pins' descriptions and other common parameters for a box.")]),n("p",[t._v("You can configure a specific implementation of "),n("strong",[t._v("codec")]),t._v(" using the "),n("code",{pre:!0},[t._v("codecSettings")]),t._v(" section (Exception: for "),n("strong",[t._v("codec-sailfish-...")]),t._v(", use "),n("code",{pre:!0},[t._v("codecParameters")]),t._v(" instead of "),n("code",{pre:!0},[t._v("codecSettings")]),t._v(").")]),n("p",[t._v("Extended example of the "),n("strong",[t._v("codec")]),t._v(" configuration:")]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-yaml"},[n("code",{staticClass:"language-yaml"},[n("span",{staticClass:"token key atrule"},[t._v("apiVersion")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" th2.exactpro.com/v1\n"),n("span",{staticClass:"token key atrule"},[t._v("kind")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Th2Box\n"),n("span",{staticClass:"token key atrule"},[t._v("metadata")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" codec\n"),n("span",{staticClass:"token key atrule"},[t._v("spec")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("custom-config")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n    "),n("span",{staticClass:"token key atrule"},[t._v("codecSettings")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n      "),n("span",{staticClass:"token key atrule"},[t._v("parameter1")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" value\n      "),n("span",{staticClass:"token key atrule"},[t._v("parameter2")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n        "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" value1\n        "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" value2\n  "),n("span",{staticClass:"token key atrule"},[t._v("pins")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n    "),n("span",{staticClass:"token comment"},[t._v("# encoder")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" in_codec_encode\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'encoder_in'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'parsed'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'subscribe'")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" out_codec_encode\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'encoder_out'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'raw'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'publish'")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n    "),n("span",{staticClass:"token comment"},[t._v("# decoder")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" in_codec_decode\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token string"},[t._v("'decoder_in'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'raw'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'subscribe'")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" out_codec_decode\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token string"},[t._v("'decoder_out'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'parsed'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'publish'")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n    "),n("span",{staticClass:"token comment"},[t._v("# encoder general (technical)")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" in_codec_general_encode\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token string"},[t._v("'general_encoder_in'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'parsed'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'subscribe'")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" out_codec_general_encode\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token string"},[t._v("'general_encoder_out'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'raw'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'publish'")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n    "),n("span",{staticClass:"token comment"},[t._v("# decoder general (technical)")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" in_codec_general_decode\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token string"},[t._v("'general_decoder_in'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'raw'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'subscribe'")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" out_codec_general_decode\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token string"},[t._v("'general_decoder_out'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'parsed'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'publish'")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n")])])]),n("h3",{attrs:{id:"codec-related-links"}},[n("a",{attrs:{href:"#codec-related-links","aria-hidden":"true"}},[t._v("#")]),t._v("Codec-related links")]),n("p",[t._v("Schema API allows configuring routing streams of the messages via links between the connections and the filters on pins. \nLet's consider some examples of routing in a "),n("strong",[t._v("codec")]),t._v(" box.")]),n("h4",{attrs:{id:"split-on-publish-pins"}},[n("a",{attrs:{href:"#split-on-publish-pins","aria-hidden":"true"}},[t._v("#")]),t._v("Split on 'publish' pins")]),n("p",[t._v("To split a big source data stream into different pins by session alias, consider declaring multiple pins with attributes "),n("code",{pre:!0},[t._v("['decoder_out', 'parsed', 'publish']")]),t._v(" and filters instead of a common pin or in addition to it. \nEvery decoded message will be directed to all declared pins and will be sent to MQ only if it passes the filter.")]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-yaml"},[n("code",{staticClass:"language-yaml"},[n("span",{staticClass:"token key atrule"},[t._v("apiVersion")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" th2.exactpro.com/v1\n"),n("span",{staticClass:"token key atrule"},[t._v("kind")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Th2Box\n"),n("span",{staticClass:"token key atrule"},[t._v("metadata")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" codec\n"),n("span",{staticClass:"token key atrule"},[t._v("spec")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("pins")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n    "),n("span",{staticClass:"token comment"},[t._v("# decoder")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" out_codec_decode_first_session_alias\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token string"},[t._v("'decoder_out'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'parsed'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'publish'")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n      "),n("span",{staticClass:"token key atrule"},[t._v("filters")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n        "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("metadata")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n            "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("field-name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" session_alias\n              "),n("span",{staticClass:"token key atrule"},[t._v("expected-value")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" first_session_alias\n              "),n("span",{staticClass:"token key atrule"},[t._v("operation")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" EQUAL\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" out_codec_decode_secon_session_alias\n      "),n("span",{staticClass:"token key atrule"},[t._v("connection-type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" mq\n      "),n("span",{staticClass:"token key atrule"},[t._v("attributes")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("[")]),n("span",{staticClass:"token string"},[t._v("'decoder_out'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'parsed'")]),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),n("span",{staticClass:"token string"},[t._v("'publish'")]),n("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n      "),n("span",{staticClass:"token key atrule"},[t._v("filters")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n        "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("metadata")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n            "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("field-name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" session_alias\n              "),n("span",{staticClass:"token key atrule"},[t._v("expected-value")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" second_session_alias\n              "),n("span",{staticClass:"token key atrule"},[t._v("operation")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" EQUAL\n")])])]),n("p",[t._v("The filtering can also be applied for pins with a "),n("code",{pre:!0},[t._v("subscribe")]),t._v(" attribute.")]),n("h3",{attrs:{id:"links-config"}},[n("a",{attrs:{href:"#links-config","aria-hidden":"true"}},[t._v("#")]),t._v("Links config")]),n("p",[t._v("The main link for a typical "),n("strong",[t._v("codec")]),t._v(" instance is a dictionary link. \nA linked dictionary serves as a reference for validations performed by a "),n("strong",[t._v("codec")]),t._v(" instance. ")]),n("p",[t._v("Example:")]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-yaml"},[n("code",{staticClass:"language-yaml"},[n("span",{staticClass:"token comment"},[t._v("##### dictionary-links.yml #####")]),t._v("\n"),n("span",{staticClass:"token key atrule"},[t._v("apiVersion")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" th2.exactpro.com/v1\n"),n("span",{staticClass:"token key atrule"},[t._v("kind")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Th2Link\n"),n("span",{staticClass:"token key atrule"},[t._v("metadata")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" dictionary"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("links\n"),n("span",{staticClass:"token key atrule"},[t._v("spec")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("dictionaries-relation")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" codec"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("fix"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("sell"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("dictionary\n    "),n("span",{staticClass:"token key atrule"},[t._v("box")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" codec"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("fix"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("sell\n    "),n("span",{staticClass:"token key atrule"},[t._v("dictionary")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n      "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" fix"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("sell\n      "),n("span",{staticClass:"token key atrule"},[t._v("type")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MAIN\n")])])]),n("h4",{attrs:{id:"connectivity-links"}},[n("a",{attrs:{href:"#connectivity-links","aria-hidden":"true"}},[t._v("#")]),t._v("Connectivity links")]),n("p",[t._v("Functionally, "),n("strong",[t._v("codec")]),t._v(" is a regular th2 box that communicates with other boxes via pins and links. \nTo configure the connections, use a template on the "),n("a",{attrs:{href:"../../infrastructure/th2-infra-schema/links/#boxes-links"}},[t._v("Links")]),t._v(" page.")]),n("h4",{attrs:{id:"report-data-provider-link-s"}},[n("a",{attrs:{href:"#report-data-provider-link-s","aria-hidden":"true"}},[t._v("#")]),t._v("Report Data Provider link(-s)")]),n("p",[t._v("For messages passing through "),n("strong",[t._v("codec")]),t._v(" to be displayed in Report UI, "),n("strong",[t._v("codec")]),t._v(" should be linked to "),n("strong",[t._v("rpt-data-provider")]),t._v(" in the following way:")]),n("p",[t._v("Dedicated to desired "),n("strong",[t._v("codec")]),t._v(", "),n("strong",[t._v("rpt-data-provider")]),t._v(" pin should be linked to "),n("code",{pre:!0},[t._v("in_codec_general_decode")]),n("strong",[t._v("codec")]),t._v(" pin.")]),n("p",[n("code",{pre:!0},[t._v("out_codec_general_decode")]),n("strong",[t._v("codec")]),t._v(" pin should be linked to "),n("strong",[t._v("rpt-data-provider")]),t._v(" pre-configured dedicated pin for particular "),n("strong",[t._v("codec")]),t._v(".")]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-yaml"},[n("code",{staticClass:"language-yaml"},[n("span",{staticClass:"token comment"},[t._v("##### from-codec-links.yml #####")]),t._v("\n"),n("span",{staticClass:"token key atrule"},[t._v("apiVersion")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" th2.exactpro.com/v1\n"),n("span",{staticClass:"token key atrule"},[t._v("kind")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Th2Link\n"),n("span",{staticClass:"token key atrule"},[t._v("metadata")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" from"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("codec"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("links\n"),n("span",{staticClass:"token key atrule"},[t._v("spec")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),n("span",{staticClass:"token key atrule"},[t._v("boxes-relation")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n    "),n("span",{staticClass:"token key atrule"},[t._v("router-mq")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" provider"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("to"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("codec"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("fix"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("sell\n      "),n("span",{staticClass:"token key atrule"},[t._v("from")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n        "),n("span",{staticClass:"token key atrule"},[t._v("box")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" rpt"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("data"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("provider\n        "),n("span",{staticClass:"token key atrule"},[t._v("pin")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" to_codec"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("fix"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("sell\n      "),n("span",{staticClass:"token key atrule"},[t._v("to")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n        "),n("span",{staticClass:"token key atrule"},[t._v("box")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" codec"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("fix"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("sell\n        "),n("span",{staticClass:"token key atrule"},[t._v("pin")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" in_codec_general_decode\n    "),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),n("span",{staticClass:"token key atrule"},[t._v("name")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" codec"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("fix"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("sell"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("to"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("provider\n      "),n("span",{staticClass:"token key atrule"},[t._v("from")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n        "),n("span",{staticClass:"token key atrule"},[t._v("box")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" codec"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("fix"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("sell\n        "),n("span",{staticClass:"token key atrule"},[t._v("pin")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" out_codec_general_decode\n      "),n("span",{staticClass:"token key atrule"},[t._v("to")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n        "),n("span",{staticClass:"token key atrule"},[t._v("box")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" rpt"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("data"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("provider\n        "),n("span",{staticClass:"token key atrule"},[t._v("pin")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" from_codec"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("fix"),n("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("sell\n")])])]),n("h2",{attrs:{id:"useful-hints"}},[n("a",{attrs:{href:"#useful-hints","aria-hidden":"true"}},[t._v("#")]),t._v("Useful hints")]),n("h3",{attrs:{id:"how-to-create-your-own-codec"}},[n("a",{attrs:{href:"#how-to-create-your-own-codec","aria-hidden":"true"}},[t._v("#")]),t._v("How to create your own codec?")]),n("p",[t._v("To implement a "),n("strong",[t._v("codec")]),t._v(" using this library you need to:")]),n("ol",[n("li",[t._v("add the following repositories into "),n("code",{pre:!0},[t._v("build.gradle")]),t._v(":")])]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-groovy"},[n("code",{staticClass:"language-groovy"},[t._v("maven "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    url "),n("span",{staticClass:"token string"},[t._v("'https://s01.oss.sonatype.org/content/repositories/snapshots/'")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n\nmaven "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    url "),n("span",{staticClass:"token string"},[t._v("'https://s01.oss.sonatype.org/content/repositories/releases/'")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"2"}},[n("li",[n("p",[t._v("add dependency on "),n("code",{pre:!0},[t._v("com.exactpro.th2:codec:4.6.0")]),t._v(" into "),n("code",{pre:!0},[t._v("build.gradle")])])]),n("li",[n("p",[t._v("set main class to "),n("code",{pre:!0},[t._v("com.exactpro.th2.codec.MainKt")])])])]),n("p",[t._v("This is usually done by using Gradle application plugin where you can set the main class like this:")]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-groovy"},[n("code",{staticClass:"language-groovy"},[t._v("application "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n   mainClassName "),n("span",{staticClass:"token string"},[t._v("'com.exactpro.th2.codec.MainKt'")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"4"}},[n("li",[t._v("implement "),n("code",{pre:!0},[t._v("codec")]),t._v(" itself by implementing IPipelineCodec interface:")])]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-groovy"},[n("code",{staticClass:"language-groovy"},[n("span",{staticClass:"token keyword"},[t._v("interface")]),t._v(" "),n("span",{staticClass:"token class-name"},[t._v("IPipelineCodec")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" AutoCloseable "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    fun "),n("span",{staticClass:"token function"},[t._v("encode")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup"),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("TODO")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string gstring"},[t._v('"encode(messageGroup) method is not implemented"')]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),n("span",{staticClass:"token function"},[t._v("encode")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" context"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IReportingContext"),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("encode")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),n("span",{staticClass:"token function"},[t._v("decode")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup"),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("TODO")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string gstring"},[t._v('"decode(messageGroup) method is not implemented"')]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),n("span",{staticClass:"token function"},[t._v("decode")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup"),n("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" context"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IReportingContext"),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroup "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("decode")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messageGroup"),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    override fun "),n("span",{staticClass:"token function"},[t._v("close")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])])]),n("ol",{attrs:{start:"5"}},[n("li",[t._v("implement a factory for it, using the IPipelineCodecFactory interface:")])]),n("div",{staticClass:"remark-highlight"},[n("pre",{staticClass:"language-groovy"},[n("code",{staticClass:"language-groovy"},[n("span",{staticClass:"token keyword"},[t._v("interface")]),t._v(" "),n("span",{staticClass:"token class-name"},[t._v("IPipelineCodecFactory")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" AutoCloseable "),n("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("\n    val protocols"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Set"),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("String"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    val settingsClass"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Class"),n("span",{staticClass:"token operator"},[t._v("<")]),t._v("out IPipelineCodecSettings"),n("span",{staticClass:"token operator"},[t._v(">")]),t._v("\n    fun "),n("span",{staticClass:"token function"},[t._v("init")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("dictionary"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" InputStream"),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Unit "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),n("span",{staticClass:"token function"},[t._v("TODO")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token string gstring"},[t._v('"not implemented"')]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),n("span",{staticClass:"token function"},[t._v("init")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("pipelineCodecContext"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IPipelineCodecContext"),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Unit "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" pipelineCodecContext"),n("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("DictionaryType"),n("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("MAIN"),n("span",{staticClass:"token punctuation"},[t._v("]")]),n("span",{staticClass:"token punctuation"},[t._v(".")]),n("span",{staticClass:"token function"},[t._v("use")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("init"),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n    fun "),n("span",{staticClass:"token function"},[t._v("create")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("settings"),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IPipelineCodecSettings"),n("span",{staticClass:"token operator"},[t._v("?")]),t._v(" "),n("span",{staticClass:"token operator"},[t._v("=")]),t._v(" null"),n("span",{staticClass:"token punctuation"},[t._v(")")]),n("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" IPipelineCodec\n    override fun "),n("span",{staticClass:"token function"},[t._v("close")]),n("span",{staticClass:"token punctuation"},[t._v("(")]),n("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),n("span",{staticClass:"token punctuation"},[t._v("{")]),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n"),n("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])])]),n("p",[n("strong",[t._v("NOTE")]),t._v(": both init methods have default implementations. \nOne of them must be overridden in your factory implementation. \nIf your "),n("strong",[t._v("codec")]),t._v(" needs the MAIN dictionary, only you can override the "),n("code",{pre:!0},[t._v("init(dictionary: InputStream)")]),t._v(" method. \nOtherwise, you should override the "),n("code",{pre:!0},[t._v("init(pipelineCodecContext: IPipelineCodecContext)")]),t._v(" method.")]),n("p",[n("strong",[t._v("IMPORTANT")]),t._v(": implementation should be loadable via Java's built-in service loader.")]),n("ol",{attrs:{start:"6"}},[n("li",[t._v("That's it! Your "),n("strong",[t._v("codec")]),t._v(" is now complete.")])])],1)}),[],!1,null,null,null);"function"==typeof p&&p(u),"function"==typeof _&&_(u);s.default=u.exports},UQSp:function(t,s,a){"use strict";s.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},VtWb:function(t,s){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/codec_inside_processes.d0485bb.8b261e73dc1e786d25e4fd6bd741cf72.png",size:{width:812,height:415},sizes:"(max-width: 812px) 100vw, 812px",srcset:["/assets/static/codec_inside_processes.82a2fbd.8b261e73dc1e786d25e4fd6bd741cf72.png 480w","/assets/static/codec_inside_processes.d0485bb.8b261e73dc1e786d25e4fd6bd741cf72.png 812w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 812 415' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-fbca73f72ff513e14ee36c8681eeab63'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-fbca73f72ff513e14ee36c8681eeab63)' width='812' height='415' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAhCAYAAABpwa0hAAAACXBIWXMAAAsSAAALEgHS3X78AAAI2ElEQVRo3t1ZWUxUWRq%2btwrtiN0Ptg/OkoFGjaMoTkxmkjH6MKZjNE7TbeLIi01HO7xg3HAboxlfFGlthHbfdwFFBXewgqIiuMQVFVco3FldUKSgqHvm%2b4/nVN%2b6XbfuLbpNmDnJn3OXs/3r%2bc93lHPnzqmKKEOHDv20X79%2b3WJjYyP1NGDAgMioqCgntYmJiVE6a4mIiOD1oEGD/N969%2b4diXfOg5GvPn36dOGNhgwZ0uPWrVuu58%2bfP3v69GklyC0J36rcbvfTzZs3f0lt9%2b3b5zBbQF5eHq%2bzs7PVmzdvOk%2bfPu1A7bhz546joqLCNlF7rMdRXFxM785Dhw5xJWE9lkKAEhXGGH8uKyvLePbsWY2RJ9AD0KuioqJ/84bEPLMoBw8e/JranjlzxhlqAWj3UbT75MkTWxaApfL1lZSU/MeKJ/CdrgwbNuxT0jx98Pl87Zqm%2bfSEz%2b0o7MCBA1/RwCdPnjS1gPT0dK6p1NTU3rm5uf/auHHjN3v37h2LvmP3799vm6g9%2bo/dsGHD13hPyMjIiKNxCwoKVBsC4OurqqrKEzy1GnkCtdK/Gzdu/KD079%2b/G5kIfRA/qTBBGo1B/2DeUgCmFnD16lXuhGfPnk2hPjU1NezXFJgvEwtdQ%2bPiMSKUAJxOp18ADx48yBIC8Bp5QmnzC4ACBPmFFIBhDX4B5OfncwHU19ebWkB1dTUXzoULFyYLBlq9Xm%2b7GCMsgtX5YPYeGgdxJEMIwGnlBlIAlZWV2YIHr%2bBDz5O5AF6/fs3evHnDmpqayPa5AEhyMEkeA6ZOnUqR0xGMEPx4VHW5XLNoPIzrbWtr08Sk2qtXrzQEVA1zaJhDwxza48ePNVgK/%2bfxePxtITj6Jxf6kwiyXc3mliSt5O7du7nUF/N4aa7GxkaGOdjLly%2b12tpaPm55eXmgADCpr7S0lG3fvp0h2pMQtA9y0djSpUsnYdweKF%2bg/lMQioqOjv4D6r8sXrx4B40HDfpIAB88iTGYJdu5cye5E0MEZkeOHGFbtmyhAMt2795NmmZCEUwIgLTH4FKbMe5n2ILN5vavIS4u7veoR2AHKaW%2bR48ebYfyNFgwQzyh%2bTXsTsEtwEcRo7WVkRW8f/8%2bwAKwFf1TmJhqZX7nz5%2bfLCygTW8BGFt79%2b6d1tLSwrUvidrAfbglCIFLC2gV0TpDP76FC6jCHbkLQNtemrO5uZmhJtLAW/gxAJE5ngbOyckx9UOYPjc/WNFU6oPdxSe135GCdbULAXAXgIuEDIKqqvrjBKwtp0MxQBctg%2b4Cp06dMhXApUuXnKLNZNo6EYhaoOE2aLyNpB6KoCH/M7V/%2b/ZtG5hoprkvX7683E4Q1G%2bDDx8%2bzAlnF6gUjclh23Xk/RAavHoBmJrhhAkTeJ2QkPD5tGnT4pKSkgagjp0xY0bYNH369Fjqj%2be4xMTE39G48%2bbNU%2bwKQG6D4MFj4InIIwSQxgUAU62zMkcEkbE0MAJISC2kpKR8lExw9erVYWWCsL58K54QdDMVHH4%2bwYFoFzKn4vv3758AufQEU3Ldvn27eM2aNX%2bngXft2mVqAVJDM2fOVFasWOHAbqCiVrF4ddWqVbaJ2q9cuVJdtGgRvTvmz5/PA9vWrVsVu4kQErb5WHsZeCg08gTrKEB9ATtEUlhakIeMzl7CWufIkSP51mGDOr0QunbtqujXaYun0aNHK%2bvWrePmhWREycrK8hO9I7tTduzY4fftBQsWdFoBOBwOvwDgsgqO8OSyATzpeUtLS/vQEZGW%2b87/ugVQmT17tv8ZiZc1T1OmTPm/iQEUBI0Zoe2CnSANkfE4DhEH7t27ly8J3/KwXRxFZP4btUMubboLLFu2jNeI/sqePXtUnOdVZI4qzhUq8nHbRO2p//r16/n78uU8D1KOHz9uV1GceUT578BDISiAJ9B%2b8Fl0%2bPDh73iHixcvrrWBCNnKA6ySlY6WTZs22bIAZJBcQceOHUukbNQCEcpU%2bvbt251wM0Mm6JVEeTNlghIRCpUJTpw4UWaEn8EXY5KTk6NmzZoVPXfu3Og5c%2bbYJmqP/tHUH%2b8xkyZN6kHjLly40HYihBwgX/DUYuQJ1OLPBAcPHqxPhS0RoVBngZKSEv7vxIkTydAEq6ioaK6vr/fgdOnBWZwTzuP%2b52DvRNS%2boaHBgwTsHU6KrKysLL0DZwGZCsuzgKbj6eezwMCBA39xGJJncnkapGcIIF6AEs4QcSRCoLH8NPjixQvfr4TEuA1DECvsQGLBToPCijUDT8FPg1LbMAQpBDrDB0BiFniAhMSSg%2bEBEgcQWuBEKJBs41fTz4hQqwESs4MHSEgsSy8APU8BAujVq1dkbW2tG4tjSBB8IFZQUMDRE5AGbXKxpaamEiL0uQUi9EdChNB2ezBEqLy8nG3bto3BVRiCFIOrMCQrHCEiRAhma4UIxVggQtFQKCFC/3C5XKVCqe2YV5NzQDCBAoiKioqsqalxU6DDB191dTWrq6ujxROgQfgdFx22o3gBeZMZqsEI7Z0Cvp4dDBMkNIbGbGxs5Fgg/nMkCP6uwWq0R48eGREhid39JFDnLmZzSxIWoCL%2b7JOACOGNmJdhSyekK1AAIggGuIARESKNSBeAP5qa4ZUrVyLEtppsQIXDJioSFdZBYmGjwvoYIHkyhcUJiiZfIYappk0hnHuBa9euRYjboxQRBH%2bTe4Hr16935F4gR78LCH5%2bGQOEAKpC3QxRR10eYCqAtWvX8gCZmZn5Z2Rt3%2bMg9S0lJPD1xMLCQttE7dE/ET47Ae9JyCj/KrBG2zdDEEC2LrcxvxkiAUBTT36ru0EEzo%2bSCbrd7rAQIbTPtXE3%2bCO/GoPvXkMgbIIl1MHsGnRUj%2bBRj8GaEK1HWd0O458iUCMVZuskd4FbOOmmOFyi/kVFRU4EQCfcT0LdthEh7F4bsXYvZbkGnhrEjbEP4y9UevbsqcTHx3dLSEjoPn78%2bEgj4XvkuHHjug8fPpxLdsSIEZ32NEiJ0JIlS/jzmDFjPjHjSVD3UaNGdfkvOybSuKCSzOwAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}},tYgp:function(t,s){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/codec_interaction_with_other_components.42db587.73ba0aa318c4009dab5c4140c6b66103.png",size:{width:2560,height:1545},sizes:"(max-width: 2560px) 100vw, 2560px",srcset:["/assets/static/codec_interaction_with_other_components.82a2fbd.73ba0aa318c4009dab5c4140c6b66103.png 480w","/assets/static/codec_interaction_with_other_components.cbab2cf.73ba0aa318c4009dab5c4140c6b66103.png 1024w","/assets/static/codec_interaction_with_other_components.2665e34.73ba0aa318c4009dab5c4140c6b66103.png 1920w","/assets/static/codec_interaction_with_other_components.42db587.73ba0aa318c4009dab5c4140c6b66103.png 2560w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2560 1545' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-14d101529d38260416f156b5d2002dbf'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-14d101529d38260416f156b5d2002dbf)' width='2560' height='1545' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAnCAYAAAC/mE48AAAACXBIWXMAAAsSAAALEgHS3X78AAAOaElEQVRo3t1aeXCTxxX/JPmSbUm%2bwfdtyzYYDOYMLTSEkKQFwoQwaRrI0QxHyQElVxPSCZ0OTF2CSZsMV6e4JZMJCbcN5jbGtyVb1i0fsuUTfIAPhC3JtrbvrT4pwvhM/mnYmTf7%2bTveb/ft2/feb2VGKpX%2b0mAwbG9oaPgDyDZngfvb6uvr3zqbkxPLjNMaCWGmRSQzkUmLmIjE%2bVRWrX%2bDPpNWafjYX71%2bPRV0vjMSw1n0ev3bZ89nJ%2bD7FVVqD%2bxf27KT6otNXcb4BkUwk2kSqXTZeHMCnG25ublR9GWTyUQmagPG%2b%2bojS9K94fUgdzfXEOjDQTxBQkGmjzcYnb5t1oC%2bLt3U399LJtEGTaaGVqksrUKpn4Xfw62RKt1BwlhcxEcDh/j7%2b8XQ9zvuLCBW64Q49%2b7dU27evNmLsc8RsUeK1WrF3lxsaCbzPvpsH%2biPFQYEz3H3FM71FPglQp/u4SmaHRqbJowULxCEJ8wTwGpRiUxeKJyzeKWAcZs%2b/fnMgzmtfUZChodNAyYTzPEHGRgYsF2bzYNWi8VcVqsnqw4cysKJpixYIYxMWihEfeHx6cLY1KVeIv/QEA9PYRrfy2cm4sM4Ejy8RHO9vUWLGMYtaePR48W9Fhw2MbHjHykWkGHANRUUFCTbDYAPrCNleHgY%2b%2bFKMMDKfV%2b%2b6bwM81a8yrFfR6cs4YbFp/NgoFy7RKYu4WV%2beZQHj93eOJx16O4A9bQhVucjMjSE961D6uYW8urhrL%2bi3jf/uMslImWxTa94ATckZhbv81zrQ%2b6Q/tQP44Dmsv34iZMDFGL0OUEbxof9/f33wQBihwFwYE1NTaSzs5O0t7cTs9lM2I/IkNlkJu2tdM9cPX2Cy0yywaf0XfPt1udZnCGLxUJxEKOjo4PAniT3798nToMk5pamZc7fT6ZduXbVlX5zv/dNFst89%2b5da0tLC7o7uXPnDjEajY45gQGMDgOgq8DErQqFguh0OiKRSAh8TM2Fz%2b8bjYOFZWUzEECuUnHD4uYwftOjmeDomQxeY5AC93cEQJQFT69jAJBOoEqp3OBkAAKBlTQ2NhK1Wk0QEw3htEKkQi5fhd9ptFresy%2b%2b8ZBeOxZsOcBPpeOInrOMaW1pccFv9AbDDhbLghgymYzU1dWR8vJy0tzcPLoB4I9BeNGKH1RXV1Opra1Fy9GXHzx4MFhWVpaMAAcPHkS3trsdx%2bn6kdbT04vvMjDR37KGHhocHHQEItbL7I1uN7wAozxLA6iuhjfOoj%2bEnZ2dTT2gqbn5XbsBcOXRyK2traSiooKgNzgb4NatW2IGVxzSAjUATJKuPr6M90tLS62QJkm5RDJ4NudC8ngu6C0KYmYsWmNbocR5zDsf7Ga6Om5zQmav54IHvI6gYNQhuVxOampqCICTqqoqioOrU1RUZAVPoIOTyRXrduy7yT3zzVfM3s8PUX0oCXOeZoR%2bweNuhQu5udtxAcHLLJWVlQTnhHPAHnGhtyIezNMIqdDmAeCWGImtuEcwLdploL8fgtMQMfb1mi4d/y9ugShvL09MN4kgApA49jpwrAEVSTRig1a3hQYaiHTgAVZcedRv73FbID5gWdFN4P3XSmR1MePMEwsCrE2wZsC0HBQUFDgTHxjb2zexc7LY5wQR34EHKw/hbhi92/hQEBw1Ytr6oau6OpL63qf/RlBBYHCcO1%2bAqSfCne%2bd4ObhleIp8A8Wpz/jBvGAD/uTD17Aj0hexF/85BrM0a5Pf/7VpVJdDcUxQxBEI4wUvI/PJY3NZOmezFNo4CfXbvQIQ12shMXP5cenLXcH7EjEhnHgWGI9vH2ivTwFKZAEpq89eKy8w/iAxhvrKHOybzMwyn3wOocBhscrGhq67pHn92a%2bhBb%2b5Nhllw0ff8tNWbjabfOey9xPsuq5c5e/4oqTh0F6OCRpocfKNb/DYonZmfXN7v4hCoGpFRf5EYH8SLF6zBay6aujOzGlLX1uPR/S30N60QhPrv%2bQt21fPnfL3mvcJavfcklf%2bZprew%2bh8WLv6ewj9oA73pww7l25ciWBgWivgiA3BK4yAGJ2EhPeg2eku7PzOPMTGjHIPfp6evLR/UAf6jSBmJ3ERO/D8%2b67Xed%2bDEbv3VqODas2rKe7u3qCOVnb2tqy6If79%2b8XQAAUg8SDJNgFAkgCBKkECBjx8Bq17qF9BzgYeDH1hSekM1D8gMxloEqzCd6jz%2bYxiWlLqf5rNwpoKgyOiXWTSiSJqBeC7COC98vLyhLsWN99d5Z%2bN2P%2bUzad8ekOXNSPuGF2XAi8tBbIK6BG2JeZKYKxi0HnqHOCQBg/XvYatRXLFTggDo/H44yRBjkjU1O1vuWnOA4j19QzY%2bgemX7p3xwud0qTgp3AYSAFfghV2RmQEyDfjZATUEGdUqlUa6aiOG3pS8wHu/bSwcjVdWEff7jbFdLd66Dv9Bg4DiylUvnCmTNX3Crk1RjdmdKq%2bikZLcjDhQcp8OMJ5nQScH5jt8KEDfZN73s7d6J7xri5uYrRM0ECQLA2iGFZGURhBp8lOQ%2boUqmPKykpX00m2SAjDF67fnPl9UI5peDXLnzPYfUi/mzcTSwbTQOJZJnhDF9fH8QPBDffMBkcKL/vHTlyZJrdAJQ5jRSIzBhJTbnaWpL6p7/8CwB8/cJiYj2F/tFQ%2bEQAE4vzEgZEATMT26%2b9RIGRsFcF4UkLvRcuXeWFg1q6N7O4uqOL4qBOyARUP/YOgSoRn1%2buUpIn9mSexcnPX75WGBybJvAWBUagbki3Magfhe/tk4j3sYfxJPiKAsJ5PqFznss8qG/toczbbMcZKZj1ICA/KC4u/oENWm3todRkZ26G9g7yzuGsFTioi7X9POToa7d%2bQV38bCtxcHbsL3UTrNNdgMa6bnr7Aze8f%2bBM9kcDWALbJjkWWbcCURhuAayMk%2bc24XfrNm5xj055wuVMyw8Ym/dc4fwte4Biv39YyXHCpkEz69rNv4%2bobUY2ex2ApXAiM8HL9B6Ub5a%2bJkOcI3BMkQ12NTe9SJffZKK5WavVUq6BTBDLbmRqiIWVG160N9SvmCpWR0cbJUN3W1u3sjzDApO0slUmMdEqcAB7LLxIb2%2bvsbCwUMwgEwMmOAiEwYpsCfIjJQ84KBggpZP1DQ2DuVeupNBUc/U6NyhcDKu8kAmJmc2ExqbR3sEIgaUFhScxScDQOju7aEpTqFQb2PKUGqCrq4t0d3dTcoKYdjpssVWDwAXkNEDJ5QrekhXrKOubHpnCgFdR3RQXUmJoXBoVvH/xYi41wLnsnO0arY5oddWWoqJiogIyJAPOIVcoST7wjzp9vVWl1pBKWZURSJeYYSc8CCti1Wg0jtVBzg5/W5FKAqMaPHv%2bPDXA7t27eWMwskfSoJ0NKlUq6gFQdA3hxJFf9PX1UZ6OlSHW68g8wRDUPavk8mfwO5lc5TIKAxz1Oicnh7LBttu337XACpdLpJbS0jJSUlpKysolBMZASoEQFZeUWNFAsAhGCJjiSW2BQSBLHU2NCVNJRy%2bsf4VDBvvpIKt11X9mXX8IjYwGLikpoVQVmRtydii40AMpnk6teTnr5HV//PYfh45PKbd3d3a8xZ75WSDlWdHb0NDdPT2kE67xkASND8Y2lpQUP3wihKthF6cgSO719Vl27T/wKyRDfD5/JpuOgkBSQeaw7CyF/Xsmm54cLV8q%2b8LY30/PA8YLgkiK%2boDIXCgo2fr199enOakQ4ukXyzwRD5/NZ1Mwyhw/X19Mi8E3yqWf2s8DxguCjvMA%2b9kEDm6ksGnQnKPWkRk7d51wB%2bDAaHGY0C8kQuQfCn1whLdPULTQPyQM0lS8KCA0FK/9pkVNi0x5Qpg6bzkM3FUAae1GoVpLcVDneFjFegNZtDvjMkzGb%2b6yVQIgVcJpEcl%2bAt/pkTbMkHBRQFiowHdaFGJBKowV%2bgdHBQWFBzPCaVHPfXFY29LdQw0wGhamRjQMngk6p8FxWzu40I5/Hkob45h61AY1O/fLo/%2bhe/jouZyXJ10IwZplfP0tPRH6LOMALyJxHnfxr7dMOuOcyS98f5LF3cCpU6ciGIjExyAlaEBkIPIRUgVBS9PYUL/Dnpb%2bsnr2VGptx7WhoSGjp6cHcapGwXHCavjkx/CGS7nnaaxounTes6219esJ5qSGOPT2FDktYTaGBtmOY0YcUo4mkcmL6Ls5p0//KCJ0LCOD9pEpiybEipr1C4b99WnqQJDvubiydhltFfPy8niRkba45urqOmndEonEtjqXLlEXRV0TCAdSJPfo0aO24JmfP2WsgoKCyWBxoDjiBgaOcpLn5x/o5e7hEeLm7h7F5XIj2J%2biHuuGgYrLHkRg780yOkxpicD//VkjeLK/w6F4TflA4f%2b1NTQ2X9PVNJyTKXTZeQWSbIW69rxcVft9eaXmYl6hdB6%2bI06e4ckaAX%2bxRYLjx/Y//9bR1d1YZ2jTaGoM1RKZTitT1lardPXasgpNa2mFOmOM1Md/bAzQdqdTr60xyMEAqnKZVimV65RgBEWpVF1fUCo/5PxuyoyZ9kuvx8kAjXpDm1pd3aArLFNoYfV1EplWXSJVtdwskq21/d7Wyq%2btb3H%2bofLxMcCdjrs1huY7lTBxeVG5sgp6Bbh%2bFXiCXFvbWKjU1ueBQSrg2Van7fBYeUBNtb5ZBh6ggInKpVU6RYWiWlFWqUFjqGTKGhUExNqickX2reIK%2bkOHSOTj/dgYoL3zngEMoNLVNWnBABq5uk5bqajRQTzAwKhRaPRqiAl1sD3O1Td30v/b8fHxRQ9wfSwM0NDYUl5T15hXIdfdulEgvVkJPaS//FKp8qZMWZ0PK59XWFoluXS9mG6B32/ahnWDz2PjAbFxcb4JiWKRlyhAFBAULAJaK3L38hGFhkXC3yEi34DptHf34AtokcThoPuL7L/g/Nzb/wBrawjB%2b53a7gAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}}}]);