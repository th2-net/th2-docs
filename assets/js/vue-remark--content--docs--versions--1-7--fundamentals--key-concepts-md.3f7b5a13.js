(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{"37Ok":function(e,t,o){"use strict";o.r(t);var n=o("7uw+"),a=o("UQSp"),r=o("oCYn");function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}r.default.config.optionMergeStrategies;var i={VueRemarkRoot:a.a},c=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(i).forEach((function(e){"object"===s(i[e])&&"function"==typeof i[e].render||"function"==typeof i[e]&&"function"==typeof i[e].options.render?t[e]=i[e]:o[e]=function(){return i[e]}}))},h=r.default.config.optionMergeStrategies,d="__vueRemarkFrontMatter",l={excerpt:null,weight:20,title:"Key concepts"};var p=function(e){e.options[d]&&(e.options[d]=l),r.default.util.defineReactive(e.options,d,l),e.options.computed=h.computed({$frontmatter:function(){return e.options[d]}},e.options.computed)},v=Object(n.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("VueRemarkRoot",[o("h1",{attrs:{id:"key-concepts"}},[o("a",{attrs:{href:"#key-concepts","aria-hidden":"true"}},[e._v("#")]),e._v("Key concepts")]),o("h2",{attrs:{id:"box"}},[o("a",{attrs:{href:"#box","aria-hidden":"true"}},[e._v("#")]),e._v("Box")]),o("p",[e._v("Across this documentation resource, the term "),o("em",[e._v("box")]),e._v(" can refer to two different things: \n1) a virtual or physical machine performing a particular function (e.g. "),o("em",[e._v("operator box")]),e._v(" or "),o("em",[e._v("tester box")]),e._v("), and \n2) an instance of a th2 module deployed within a th2 cluster as a microservice. ")]),o("p",[o("em",[e._v("th2 box")]),e._v(" is a box in the 2nd sense – a th2 component that represents some function or service of th2.\nAcross the th2 ecosystem, the source code of each microservice (or box) is typically written in Java or Kotlin, but can be written in any language as per business needs.\nThe source code for each open-source module can be found in GitHub: among several repositories comprising a family, there is typically one that is used as is or after customization to deploy a corresponding box (or several boxes) in a th2 cluster.\nBoxes in th2 can refer to implementations of either Core (framework-level th2 functionalities) or Module (specific software testing–related functionalities) instances. ")]),o("p",[e._v("Each box exists as a docker image in a registry and is deployed as a Docker container. \nManagement of the deployed th2 boxes is orchestrated using the combination of infra components and Kubernetes.\nTo deploy a box, a custom resource (CR) must be created. Each CR is a "),o("code",{pre:!0},[e._v("yaml")]),e._v(" file that describes the state of the box after deployment.\nThe CR contains information such as Docker image and version, resources, pins, etc. \nA set of boxes (in the form of CRs) is provided in infra-schema in a Git repository.")]),o("h2",{attrs:{id:"module"}},[o("a",{attrs:{href:"#module","aria-hidden":"true"}},[e._v("#")]),e._v("Module")]),o("p",[e._v("While a box is a particular instance in th2 implementation, a "),o("em",[e._v("module")]),e._v(" is the functional unit within the th2 framework. \nth2 "),o("em",[e._v("modules")]),e._v(" are responsible for a wide range of functionalities associated with specific software testing actions, such as connecting to external systems, sending and receiving messages, performing rule-based checks.\nOn GitHub, a typical "),o("em",[e._v("module")]),e._v(" is represented by a family of "),o("a",{attrs:{href:"https://github.com/th2-net",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-net")]),e._v(" repositories containing source code for a th2 box to be deployed as is, as well as libraries and templates to support creation of custom th2 boxes of a certain functional type.")]),o("p",[e._v("In case of customization, a generic Docker image of a specific box is used as a basis for implementing extensions on top of the off-the-shelf functionality of the component (e.g. extensions related to different protocols).\nFor example, the "),o("a",{attrs:{href:"https://github.com/th2-net/th2-conn-generic",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-conn-generic")]),e._v(" repository contains an implementation of the FIX protocol connectivity extension on top of the basic "),o("a",{attrs:{href:"https://github.com/th2-net/th2-conn",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-conn")]),e._v(" functionality.")]),o("p",[e._v("In th2 implementation, a box functionally representing a "),o("em",[e._v("module")]),e._v(" is defined through the "),o("code",{pre:!0},[e._v("Th2Box")]),e._v(" kind specified in its Custom Resource, as opposed to the "),o("code",{pre:!0},[e._v("Th2CoreBox")]),e._v(" kind reserved for th2 Core boxes.")]),o("h2",{attrs:{id:"message"}},[o("a",{attrs:{href:"#message","aria-hidden":"true"}},[e._v("#")]),e._v("Message")]),o("p",[e._v("In th2, a "),o("em",[e._v("Message")]),e._v(" is the entity that is used to transfer information to and from a system under test (SUT). \nFor example, if an exchange is being tested, order details are sent to the SUT by a "),o("em",[e._v("message")]),e._v(", and the SUT’s execution report is received via a "),o("em",[e._v("message")]),e._v(".  ")]),o("p",[e._v("A "),o("em",[e._v("message")]),e._v(" is an instance of the class "),o("code",{pre:!0},[e._v("Message")]),e._v(". \nThis class is a data structure that contains attributes such as "),o("code",{pre:!0},[e._v("parent_event_id")]),e._v(", "),o("code",{pre:!0},[e._v("messageMetaData")]),e._v(", and "),o("code",{pre:!0},[e._v("fields")]),e._v(".\n"),o("em",[e._v("Messages")]),e._v(" are encoded and decoded by the th2 components according to the protocol used and the information in the "),o("code",{pre:!0},[e._v("messageMetaData")]),e._v(" and the "),o("code",{pre:!0},[e._v("fields")]),e._v(" should be set up according to the specification of the protocol.\nThe protocol used is determined by the system that is being tested.\nConsequently, a "),o("em",[e._v("message")]),e._v(" exists as raw "),o("em",[e._v("message")]),e._v(" (encoded) of class "),o("code",{pre:!0},[e._v("RawMessage")]),e._v(", and a parsed "),o("em",[e._v("message")]),e._v(" (decoded) of class "),o("code",{pre:!0},[e._v("Message")]),e._v(". ")]),o("p",[e._v("Within the th2 cluster, "),o("em",[e._v("messages")]),e._v(" are transferred between the th2 components by the message broker RabbitMQ. \nAll raw "),o("em",[e._v("messages")]),e._v(" are saved to the th2 data lake using RabbitMQ, the component "),o("a",{attrs:{href:"https://github.com/th2-net/th2-mstore",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-message-store")]),e._v(", and "),o("a",{attrs:{href:"https://github.com/th2-net/cradleapi",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Cradle API")]),e._v(".\nAll "),o("em",[e._v("messages")]),e._v(" produced are associated with their subsequent test event and can be viewed in the final th2 test report.")]),o("h2",{attrs:{id:"event"}},[o("a",{attrs:{href:"#event","aria-hidden":"true"}},[e._v("#")]),e._v("Event")]),o("p",[o("em",[e._v("Event")]),e._v(" in th2 is any noteworthy test action performed by th2 components during a test run.")]),o("p",[o("em",[e._v("Events")]),e._v(" have a hierarchy: an "),o("em",[e._v("event")]),e._v(" can relate to another as a parent, or child.\n"),o("em",[e._v("Events")]),e._v(" created in different components are not restricted from relating to one another.\nAll "),o("em",[e._v("events")]),e._v(" are sent via RabbitMQ to the "),o("a",{attrs:{href:"https://github.com/th2-net/th2-estore",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-event-store")]),e._v(" component which then saves them in th2’s data lake Cassandra via "),o("a",{attrs:{href:"https://github.com/th2-net/cradleapi",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Cradle API")]),e._v(".\n"),o("em",[e._v("Events")]),e._v(" are either stored as a single "),o("em",[e._v("event")]),e._v(" or as an "),o("em",[e._v("event")]),e._v(" batch.")]),o("p",[e._v("The saved "),o("em",[e._v("events")]),e._v(" are later extracted from the Cassandra and displayed in the th2 test report in a chronologically and hierarchically organized manner.")])])}),[],!1,null,null,null);"function"==typeof c&&c(v),"function"==typeof p&&p(v);t.default=v.exports},UQSp:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}}}]);