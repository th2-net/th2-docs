(window.webpackJsonp=window.webpackJsonp||[]).push([[51],{UQSp:function(e,t,o){"use strict";t.a={name:"VueRemarkRoot",render:function(e){return e("div",null,this.$slots.default)}}},kRvF:function(e,t,o){"use strict";o.r(t);var r=o("7uw+"),n=o("UQSp"),i=o("oCYn");function s(e){return(s="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&"function"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?"symbol":typeof e})(e)}i.default.config.optionMergeStrategies;var a={VueRemarkRoot:n.a},c=function(e){var t=e.options.components=e.options.components||{},o=e.options.computed=e.options.computed||{};Object.keys(a).forEach((function(e){"object"===s(a[e])&&"function"==typeof a[e].render||"function"==typeof a[e]&&"function"==typeof a[e].options.render?t[e]=a[e]:o[e]=function(){return a[e]}}))},l=i.default.config.optionMergeStrategies,h="__vueRemarkFrontMatter",p={excerpt:null,"tree-title":"check1",repo_owner:"th2-net",repo:"th2-check1",related:[],weight:15,title:"check1 - a brief introduction"};var u=function(e){e.options[h]&&(e.options[h]=p),i.default.util.defineReactive(e.options,h,p),e.options.computed=l.computed({$frontmatter:function(){return e.options[h]}},e.options.computed)},f=Object(r.a)({},(function(){var e=this,t=e.$createElement,o=e._self._c||t;return o("VueRemarkRoot",[o("h1",{attrs:{id:"check1---a-brief-introduction"}},[o("a",{attrs:{href:"#check1---a-brief-introduction","aria-hidden":"true"}},[e._v("#")]),e._v("check1 - a brief introduction")]),o("h2",{attrs:{id:"overview"}},[o("a",{attrs:{href:"#overview","aria-hidden":"true"}},[e._v("#")]),e._v("Overview")]),o("p",[o("strong",[e._v("check1")]),e._v(" is the component of the th2 system that checks if a message(s) sent by the system under test (a real exchange or simulator) is accurate. \nThis process is called "),o("term",{attrs:{term:"verification"}},[e._v("verification")]),e._v(". \nVerification is an essential part of the testing process because it allows you to ensure that a system is functioning properly. \nVerification is performed by comparing the actual results produced by a system to your expected results. \nYou can write a script or create a model to send your expected results to "),o("strong",[e._v("check1")]),e._v(".")],1),o("p",[e._v("By using "),o("strong",[e._v("check1")]),e._v(" you will be able to:")]),o("ul",[o("li",[o("p",[e._v("identify the message(s) from the system related to your order message;")])]),o("li",[o("p",[e._v("identify the missing or extra messages by the system;")])]),o("li",[o("p",[e._v("check the order of the messages received;")])]),o("li",[o("p",[e._v("verify that the information contained within a system message is correct.")])])]),o("h2",{attrs:{id:"family"}},[o("a",{attrs:{href:"#family","aria-hidden":"true"}},[e._v("#")]),e._v("Family")]),o("p",[e._v("The following repositories are required by "),o("strong",[e._v("th2-check1")]),e._v(" module:")]),o("ul",[o("li",[o("a",{attrs:{href:"https://github.com/th2-net/th2-check1",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-check1")]),o("ul",[o("li",[e._v("The check1 repository contains the source code which can be used to generate an image for a docker container. But the "),o("strong",[e._v("check1")]),e._v(" image is already in the registry for use. This image is pulled to Kubernetes to create a pod.")])])]),o("li",[o("a",{attrs:{href:"https://github.com/th2-net/th2-grpc-check1",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-grpc-check1")]),o("ul",[o("li",[e._v("the gRPC check1 library. This library is required for communication by gRPC and includes the "),o("code",{pre:!0},[e._v("check1.proto")]),e._v(" file described below. This library is also used to create and publish the required packages in Python or Java.")]),o("li",[o("a",{attrs:{href:"https://github.com/th2-net/th2-grpc-check1/blob/master/src/main/proto/th2_grpc_check1/check1.proto",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-check1.proto")]),o("ul",[o("li",[e._v("The gRPC "),o("code",{pre:!0},[e._v("check1.proto")]),e._v(" file contains the definitions of "),o("strong",[e._v("check1")]),e._v(" service and the data structure of the requests and responses.")])])])])]),o("li",[o("a",{attrs:{href:"https://github.com/th2-net/th2-grpc-common",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-grpc-common")]),o("ul",[o("li",[e._v("This library contains common proto messages that are used in all th2 components. Tool generates code from "),o("code",{pre:!0},[e._v(".proto")]),e._v(" files and uploads built packages ("),o("code",{pre:!0},[e._v(".proto")]),e._v(" files and generated code) to specified repositories.")]),o("li",[o("a",{attrs:{href:"https://github.com/th2-net/th2-grpc-common/blob/master/src/main/proto/th2_grpc_common/common.proto",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("th2-grpc-common.proto")]),o("ul",[o("li",[e._v("this gRPC "),o("code",{pre:!0},[e._v("common.proto")]),e._v(" file contains definitions on common classes required by the check1 service.")])])])])])]),o("p",[e._v("A "),o("code",{pre:!0},[e._v(".proto")]),e._v(" file is the interface definition written using Interface Definition Language (IDL) from Protocol Buffers and defines the interface between a client and server for gRPC. \nThe Protocol Buffers IDL is a custom, platform-neutral language with an open specification.")]),o("p",[e._v("The "),o("code",{pre:!0},[e._v(".proto")]),e._v(" file is used to automatically generate language - or platform-specific stubs for clients and servers. \nStubs are needed for parameter conversion so that servers can understand the client requests. \nThe client program imports this interface, while the server program exports this interface.")]),o("p",[e._v("The interface allows two components written in two languages to communicate with each other. \nBy sharing "),o("code",{pre:!0},[e._v(".proto")]),e._v(" files, teams can generate code to use each others' services, without needing to take a code dependency.")]),o("p",[e._v("More information is available at "),o("a",{attrs:{href:"https://developers.google.com/protocol-buffers/docs/overview",target:"_blank",rel:"nofollow noopener noreferrer"}},[e._v("Protocol Buffers")])])])}),[],!1,null,null,null);"function"==typeof c&&c(f),"function"==typeof u&&u(f);t.default=f.exports}}]);