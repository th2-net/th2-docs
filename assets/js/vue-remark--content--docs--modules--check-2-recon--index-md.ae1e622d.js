(window.webpackJsonp=window.webpackJsonp||[]).push([[54],{Jhgc:function(t,s){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/check-method.42db587.ce02355a4bdbafa46ac59f2d29f0c692.png",size:{width:2560,height:1230},sizes:"(max-width: 2560px) 100vw, 2560px",srcset:["/assets/static/check-method.82a2fbd.ce02355a4bdbafa46ac59f2d29f0c692.png 480w","/assets/static/check-method.cbab2cf.ce02355a4bdbafa46ac59f2d29f0c692.png 1024w","/assets/static/check-method.2665e34.ce02355a4bdbafa46ac59f2d29f0c692.png 1920w","/assets/static/check-method.42db587.ce02355a4bdbafa46ac59f2d29f0c692.png 2560w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2560 1230' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-e5ff43fac4e2fcf9f52088bc95e9848c'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-e5ff43fac4e2fcf9f52088bc95e9848c)' width='2560' height='1230' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAfCAYAAABXscv8AAAACXBIWXMAAAsSAAALEgHS3X78AAAONUlEQVRYw9VYCXRT15l%2bT7LB2HjB4C0E7ISwJaQZp3gSaGBy2iTTYgIpDbQNydAy0xKahBAGeooZOmcO4XTSsGMCAbMZaoNZvGDL1m7Jkp92S9Yuy7JkWZYsr7JleQFz53/PT45NcUx7Eqa553zn3vfe1X3vfv//f/9/hWHfcispKaH6tWvXYnq9nuF0OpkOh%2bOv0NTUxFSr1cz6%2bnpqPNkcm83G2L59O7XmsWPHJn2vRCKheqFQiPH5fAwhhEVDmz59elxiYuI08lleXh72WNrmzZu/8TU///zzKeeESRjXYgFpgCjscbWbN2%2bGPYABFv6h1WrdYDab1wPeImGxWNbDPQrwfD14wNj1gwDrv2U0Gtds27aNsuDhw4en3Dz0MwFpNTU1s9xudwJ4Qhy8d5ZIJEqUSqWp3zoB8GKc7Dds2DCjvb3dCB%2bABgcH7w8PD6PxGBkZQbA5BIRQ4wefDw0NkT9Fvb29fbt3704m17x48SL%2bCATMAiTI5XIcwjESfhNZUVERqVKpcLg/57G5f1paWuShQ4dWnTt37ifnz59/7fjx49nwMa%2bVlZWtAuu%2bqNFossAiWWCZLHIM3jAB8MFZOp0ui8fjZWVkZJCujK1YseJRPCAWMGMS4yRgj7FFAGJoRAPi6TH%2bd6wV/ajxD30cIDp8DzY9wTu%2b9V2D6lI9juMRoL5JycnJKUlJSSmzZ8%2beC9dPpqSkJKempiYdOHCAef36dQabzWaYTCYGaMEEEATBgAjA33jjjWmwFkkcxmQyJ31vWOGrq6snEPBgeDxuD5hDg4zhJ2lFJj8iAzDtb/SkR2oQXmQIUPMhfHAgGIe0iNMhkIgp7UHc7BlmWrx3mZbWUVhhbGwZYooN3dQiteaeb4qAREAqvfEU%2bjqRJiOeBnOKdRiTEBBJkzmTTHdRUVGkTsSsXr36e7DRh2oAaEr8lF8tNnR9Ux4QSVue3PgTNBHk5ufS4/D96TQJYUTQfSTdx0xCwPRx2oBv2rSJsnJxcXHCwYMHZy9ZsiQqNzc3Jj8/P2bXrl0x6enpURAmaRhf27GAsATeUTkG3lY2hjYq7f0bFQ3BjVJzz8/KiBZKJY0d6O83e0QkrQGMyBnRMakz4%2bKTo2NinyAxY0ZMevTM2LTR65lz4fm8KPIeXEfNiM6gx3PJeTGj8%2bYmzJqTAGtRBDAYzAcJGLO0TCaj%2bvXr18f4fL66YDDY19jY6Lfb7R1QD/gHoLlcrhJM3dj/Udd9hBraRpCjAyFHJ0LuAEL2doRkDaEXyUWuVaoY31AIxNGYRbv77HH3Eun7ibQbk%2bME2toJdPUWtvBkHjBGwNWrV6n%2bk08%2bmQkbze/u7uYCARWgCazW1tbynp4eARRWhzCNI7TdG0JIom2%2bL1A0IKGqEVm9wwi0YOTIuVuvky9Lf2phPF1GjkfC35LCFmW%2bytjywf4F772/N/MXW3d9/%2be/3rl805YdL2353b4X3vmP3Zkbt%2bxYvulXH2f9Yusn//zvO/77%2bY1bPsqCey/%2bfOuuZdlvb13%2by9/see697TnPnr5BpKalL46eJMTG7hcUFFD9/v37Z4LVj3q93iuQXS4YDIaLUGxd8Pv9BVB47cfktt53De6hThBCp6l5wAtoNXmGm%2btdA43XOfWZJPNKxzBjklycSLP%2bMJAkRc9KTCLnRS79p5VPi7UevVjrvstXNPYJVU39PHlDv0jjCsKYAoewBbkyuFfXHKzWOIO1Bm%2b/pfVeP3xPkAR846AevvF3%2b3LTyTWTUufGQEqMpr0jlslgUDn3nR//K3a74C%2bUcd7dvDkWNq%2bBEOgBInxgdb/H4/GGQqEgHMyKsSKhM6qkpnlOkQ3FV%2bzck12%2b/%2bDymz0orkzsmk3mXdId0%2bY9/TBL43RKm0GnsOnjEEm7d8zMuATqetnyf0ngq1ve56ucf6wi7Hs5ssacOyJjDlfRRIEjd%2bSwpNacsmpjDk/ppK5F2tYcrXMgR%2bPoz6lrCsE4tB9Cdvdvf3%2bIDI/IZxYtjZoRFRV%2b5zTyxBfGcF8v9c0qpTL6ypUrGWfOnJkHVec8Fos1D84n806dOjWvsLAwY8KO5KtemIVG08xXu2QwxlLFmjVrJjIA7CckPLyaJJ/Fx8dj//Dt%2b6cQ1gKW3vbxp8zoBd%2bb9to7O5jPLM2Mik2YnYThzFhaoMYa%2bDwTfC5yHhAFqhabEiYMZ2BpqclfJetIPAaPxKIiYvAIRjQWsegnC3CuoYFRRdiYFSIDk1VjYt7iqJhVUguFSomZWSbUMW%2bylUx2rZVZKTUzxfU%2bKoVITD2vgicYzK33NBbf/Tqzd0Sldw8qtE0hfY2lb2X4nV2cqh1BaY1lSCGTDyvlKuiV/YRUG6gW8JuvF1AHHyOXw4DzBi4Wi6miCGPfvhB27wgYZOCjRUoyrcRUCz0Xi0Ub7KMX06bPhPyTAfltDozjsMyVOOlyG%2bJGefrgP98P/wxCA08arfLwMWYUl/hU3yLswqrefutrjaOyB6k8J7f1rfMEEVJZ2xGh9yC5yQciPYTcfSDeheX/VRmHJectXviU7/aNYmS3IReXg5r5XNQq5KMRgw6FFETAc/M6dfTt4rEnhjNfVJtawlM9WyLQPcMhGhawa20LDhw%2bl/mn45czJXXWJ/%2bcmUL9gCgvn6%2b4mr%2b4/kbRM5bi2wtkVy4vrDh54lki//ISOZ83tkFJlZwpVHAW5d3Ofa5CdmthtZ719B1p0cJy4sbCSlnJkmqpkIqLanUtVvLTNzH%2bpg2TEqCkCZDZeteTBFg8Q8jg6kf1ziCy%2b%2b8jTz8QUC754A545IdgsPaykquo0Y56iVoKgVopQkYDChG1fa1F10jDYt3sqokE8BSOFVD2tlu899qsvpE2W9t9P/QtgJBM7/1DeF4rj7MzpJSHBlUK77Ba6R/WqNqG1Epvv5zosZaWrCbnDLY7I6gPbyJOGXz6kMFX32ryG/zGNoMPxh1at9pRLr9FKjjGqS6cMoXy6jqoORxN%2b7JaS%2bC0qjF0Egq2k6rGgZPyhuAJqTlwhutEC8Pz3cLytd4a9vkOQnACkNtO8E/6pNwvWoQV/2stukC5aFN50cSXcOX2Va4ehNS2TiTWNJH1AKqzd6H2ewjVsomrxYvnLiPn%2baoFf0AuB3KwK5G9igVuxkYBOYGQ2Yi4uTd%2bv/eXl%2bY7VQbqQKNxKf/SOuxBPDUPCesEqFonRCa/CelbtAMVez98j/fSyjQhhM2dDeu%2b1gMUDX2UvsisvT8kUzOcURpsvhG7rW3EDnVKAxiuRab3/2is%2bnNJ92nb6tt0fr1N32G013cYGnR%2bg1Pt0yg5DhalARK3%2bK884BXIr3eN7oFhnaN3SOsIDJtaBkIuqAYJwvL5H%2blTmlfA24MM9ShASAc6JeLhLmnNUFAhGxxQKZD88q23MexVhltnpERL1SS/0BiwI7VTFVI6FMOqJuWg3qu/p2tWd1V88WkWHEaZXFMVXrZhPcbb9LOpNaChb10LxLsCYr9G60ISXTMyuUOUBtTkFx%2b48%2bT0J4oXLF2skJbecYZcqJokHSAC4q1%2bM9K3agMCczmlAfKmmokEVEpMz0pNXScU9tARcK8jcB44Cu51GM4HZwQGf3Z4XmNpydqOKtbpXj7ncB%2bfezTA4xzt5lQdaa%2bqOGnjlC8m53S6R0tmkZm7lXCKv1C2SA8Djirc0iMyp/iYxC78jNMuJYsnrKrm1pQhABunCCCsvW82dYGzeYaRoXmAgtV3Dzm7EZIKdP9G/fMEpCqMvLOuARfSujWAOqq3dVmR1qPu4ltHCSCaRA%2bIoMKxEhbuAw8IGJtDAbNnKGBqGewCV0Myhf1geB54wK4BtRIFZLVdfXIi0K%2bUB0IqRQ/owqDh0sV1FAEWfQTtAV8afQZU51J36Vq0AUCPwVsf1DbXeW/cvPYCOYetvIOf%2bvg8dmFPweQaoG3HaA1IBg14EzQgW9M0mK1xDmVDeGTDMX0dz4MSw/NF7upFRJP4LVULsUbtkWWrPES23CVZK2kUvM4yFFFVIhDxoAY0rmoGDdA0hDXAhZQWP/KDBhBs4lrx0vnP0xqQg9wu1MzjoCZOFXJDmgkq5QjZLEj5p0/3FS5bPN8rFX2lAXdbKQ0Q1PEpDTCDK9Z7dEOXjhb%2b%2bui7BWn9SIkd33kZ%2b3JP0dd6AZxWp6xlOPlCTHT1syk9qtJ44yEsKxw/MLYM9lq8d3tMnqEeo3uwBzyiE7ICIjSu/xnLAnzuR2DtboAzKCeaScDYBVmgzVhY8DqVYhyW0SzgIM6C6iO9V9ep89T1ALrhuq%2buWd1azL6xhPoYaRn%2b2Ud52JEPz0/6wQJdJ%2b0JHeSZham09zHB8hTIMaRH5niCxHYuLndKmHKnlIaEqXBJmbUOEYNFb15oYz1AgFiZypfbVvOVjpfgQLKiWu1cIVA6XoYDyyt8hWlxeJ6jrGRdJ7syr0/AOxEU8nJ7%2bdzcbi77ZAeb9aWdXUZtyiurpKwgVHEyhfXsHwBeFhm4K0iQ42ot5xWxmkf9owu1AvadaL1yBSVEPgFvL1lltdeIUKe0htQCRGoCmRmkF2796vlZh6I0hSzmo6xZyh%2b1xrGdl7Azu6///26wXKTHeDaECxrHwT7aVyjasJBKHiZgH6kBLQIe6AAXeaDMHKpTgwaYEf/0zT071uWl1BdVUnNZymJc1FWOV7eHcQev7ijHBd5SnCUppt5bJSv9x7CwVCql/iYOI/y/OQnyWVBWS6U2D5ezLSQnHHfVSi1UgvpBpbx%2bQCnTwXOrvaL0ZUoDpDz89K5C6jj64Frj1wy/9zvRqq6PuqiAxZpbfunSU7fPnp1/%2b9zZ9NLzeell5/Pms67kPy3i8WdTelI6KjCnd1/Dvivt/wCUFjqi9OhoQQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}},"K+z9":function(t,s,a){"use strict";a.r(s);var e=a("7uw+"),n=a("UQSp"),o=a("oCYn");function i(t){return(i="function"==typeof Symbol&&"symbol"==typeof Symbol.iterator?function(t){return typeof t}:function(t){return t&&"function"==typeof Symbol&&t.constructor===Symbol&&t!==Symbol.prototype?"symbol":typeof t})(t)}o.default.config.optionMergeStrategies;var c={VueRemarkRoot:n.a},p=function(t){var s=t.options.components=t.options.components||{},a=t.options.computed=t.options.computed||{};Object.keys(c).forEach((function(t){"object"===i(c[t])&&"function"==typeof c[t].render||"function"==typeof c[t]&&"function"==typeof c[t].options.render?s[t]=c[t]:a[t]=function(){return c[t]}}))},v=o.default.config.optionMergeStrategies,l="__vueRemarkFrontMatter",r={excerpt:null,repo_owner:"th2-net",repo:"th2-check2-recon-template",skip_readme:!0,related:[{name:"th2-net/th2-check2-recon",icon:"mdi-github",href:"https://github.com/th2-net/th2-check2-recon"},{name:"th2-net/th2-grpc-check2-recon",icon:"mdi-github",href:"https://github.com/th2-net/th2-grpc-check2-recon"}],weight:20,title:"check2-recon"};var u=function(t){t.options[l]&&(t.options[l]=r),o.default.util.defineReactive(t.options,l,r),t.options.computed=v.computed({$frontmatter:function(){return t.options[l]}},t.options.computed)},_=Object(e.a)({},(function(){var t=this,s=t.$createElement,e=t._self._c||s;return e("VueRemarkRoot",[e("h1",{attrs:{id:"check2-recon"}},[e("a",{attrs:{href:"#check2-recon","aria-hidden":"true"}},[t._v("#")]),t._v("check2-recon")]),e("h2",{attrs:{id:"overview"}},[e("a",{attrs:{href:"#overview","aria-hidden":"true"}},[t._v("#")]),t._v("Overview")]),e("p",[e("strong",[t._v("—Åheck2-recon")]),t._v(" is one of the th2 modules. \nThe purpose of "),e("strong",[t._v("check2-recon")]),t._v(" is to compare several event streams. \nThe module matches related messages and detects discrepancies between actual and expected messages. \nBesides direct comparison, "),e("strong",[t._v("check2-recon")]),t._v(" can create notes about potential inconsistencies inside the messages.")]),e("notice",{attrs:{info:""}},[e("p",[t._v('In the name of this module, "recon" stands for "reconciliation" rather than "reconnaissance". \nIn th2, we use "recon" as a shortened term instead of "reconciliation". ')])]),e("h2",{attrs:{id:"family"}},[e("a",{attrs:{href:"#family","aria-hidden":"true"}},[t._v("#")]),t._v("Family")]),e("p",[t._v("On GitHub the "),e("strong",[t._v("check2-recon")]),t._v(" module is represented by three repositories: ")]),e("ul",[e("li",[e("a",{attrs:{href:"https://github.com/th2-net/th2-check2-recon",target:"_blank",rel:"nofollow noopener noreferrer"}},[e("strong",[t._v("th2-check2-recon")])]),t._v(" is a library that describes the main logic of the functionality as well as classes and methods behind the comparison rules.")]),e("li",[e("a",{attrs:{href:"https://github.com/th2-net/th2-check2-recon-template",target:"_blank",rel:"nofollow noopener noreferrer"}},[e("strong",[t._v("th2-check2-recon-template")])]),t._v(" is a template providing sample config files with implementation of the rules and the parameters of an entry point. ")]),e("li",[e("a",{attrs:{href:"https://github.com/th2-net/th2-grpc-check2-recon",target:"_blank",rel:"nofollow noopener noreferrer"}},[e("strong",[t._v("th2-grpc-check2-recon")])]),t._v(" is a repository enhancing the module with gRPC methods. ")])]),e("h2",{attrs:{id:"configuration"}},[e("a",{attrs:{href:"#configuration","aria-hidden":"true"}},[t._v("#")]),t._v("Configuration")]),e("p",[t._v("To use "),e("strong",[t._v("check2-recon")]),t._v(", configure it for your purposes by editing the "),e("code",{pre:!0},[t._v("check2-recon.yaml")]),t._v(" configuration file.\nIn particular, the adjustment is needed for the parameters for a Kubernetes Pod (the "),e("code",{pre:!0},[t._v("spec/custom-config")]),t._v(" section) and parameters describing comparison rules (the "),e("code",{pre:!0},[t._v("spec/custom-config/rules")]),t._v(" section of the config file). ")]),e("h3",{attrs:{id:"custom-resource-configuration"}},[e("a",{attrs:{href:"#custom-resource-configuration","aria-hidden":"true"}},[t._v("#")]),t._v("Custom resource configuration")]),e("h4",{attrs:{id:"parameters-defined-for-the-kubernetes-pod-configuration"}},[e("a",{attrs:{href:"#parameters-defined-for-the-kubernetes-pod-configuration","aria-hidden":"true"}},[t._v("#")]),t._v("Parameters defined for the Kubernetes Pod configuration:")]),e("ul",[e("li",[e("code",{pre:!0},[t._v("recon_name")]),t._v(" - the name of the report in GUI.")]),e("li",[e("code",{pre:!0},[t._v("cache_size")]),t._v(" - maximum message group size. When the message group is full, a new message replaces the oldest one. An appropriate event is sent about this.")]),e("li",[e("code",{pre:!0},[t._v("rules_package_path")]),t._v(" - the path to the rules.")]),e("li",[e("code",{pre:!0},[t._v("event_batch_max_size")]),t._v(" - maximum number of events in one EventBatch.")]),e("li",[e("code",{pre:!0},[t._v("event_batch_send_interval")]),t._v(" - the frequency of sending EventBatch with events.")]),e("li",[e("code",{pre:!0},[t._v("rules")]),t._v(" - list of "),e("em",[t._v("rule")]),t._v(" configurations.")])]),e("h4",{attrs:{id:"configuration-for-each-rule-in-rules-list"}},[e("a",{attrs:{href:"#configuration-for-each-rule-in-rules-list","aria-hidden":"true"}},[t._v("#")]),t._v("Configuration for each rule in rules list:")]),e("ul",[e("li",[e("code",{pre:!0},[t._v("name")]),t._v(" - name of the file with the rule.")]),e("li",[e("code",{pre:!0},[t._v("enabled")]),t._v(" - the flag that toggles the rule usage. Set to "),e("code",{pre:!0},[t._v("true")]),t._v(" to enable.")]),e("li",[e("code",{pre:!0},[t._v("match_timeout")]),t._v(" - time interval between compared messages in seconds. The current time is taken from a new message. For all messages, that arrived earlier than ("),e("code",{pre:!0},[t._v("actual_time")]),t._v(" - "),e("code",{pre:!0},[t._v("match_timeout")]),t._v(") and did not participate in the checks, the corresponding events will be created.")]),e("li",[e("code",{pre:!0},[t._v("match_timeout_offset_ns")]),t._v(" - the addend for "),e("code",{pre:!0},[t._v("match_timeout")]),t._v(" * 1_000_000_000, if precision to nanoseconds is needed.")])]),e("p",[t._v("Example of the Pod configuration:")]),e("div",{staticClass:"remark-highlight"},[e("pre",{staticClass:"language-yaml"},[e("code",{staticClass:"language-yaml"},[e("span",{staticClass:"token comment"},[t._v("##### check2-recon.yaml #####")]),t._v("\n"),e("span",{staticClass:"token key atrule"},[t._v("apiVersion")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" th2.exactpro.com/v1\n"),e("span",{staticClass:"token key atrule"},[t._v("kind")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Th2Box\n"),e("span",{staticClass:"token key atrule"},[t._v("metadata")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),e("span",{staticClass:"token key atrule"},[t._v("name")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" recon\n"),e("span",{staticClass:"token key atrule"},[t._v("spec")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n  "),e("span",{staticClass:"token key atrule"},[t._v("image-name")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" some_image_name\n  "),e("span",{staticClass:"token key atrule"},[t._v("image-version")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" some_image_version\n  "),e("span",{staticClass:"token key atrule"},[t._v("type")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" th2"),e("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("check2"),e("span",{staticClass:"token punctuation"},[t._v("-")]),t._v("recon\n  "),e("span",{staticClass:"token key atrule"},[t._v("custom-config")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n    "),e("span",{staticClass:"token key atrule"},[t._v("recon_name")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" Demo_Recon\n    "),e("span",{staticClass:"token key atrule"},[t._v("cache_size")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("5000")]),t._v("\n    "),e("span",{staticClass:"token key atrule"},[t._v("event_batch_max_size")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("100")]),t._v("\n    "),e("span",{staticClass:"token key atrule"},[t._v("event_batch_send_interval")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("1")]),t._v("\n    "),e("span",{staticClass:"token key atrule"},[t._v("rules_package_path")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" rules\n    "),e("span",{staticClass:"token key atrule"},[t._v("rules")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n      "),e("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),e("span",{staticClass:"token key atrule"},[t._v("name")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('"rule_demo_1"')]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("enabled")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token boolean important"},[t._v("true")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("10")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout_offset_ns")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("0")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("configuration")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('""')]),t._v("\n      "),e("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),e("span",{staticClass:"token key atrule"},[t._v("name")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('"demo_conn1_vs_demo_conn2"')]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("enabled")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token boolean important"},[t._v("true")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("10")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout_offset_ns")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("0")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("configuration")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('""')]),t._v("\n      "),e("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),e("span",{staticClass:"token key atrule"},[t._v("name")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('"demo_conn_vs_demo_dc"')]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("enabled")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token boolean important"},[t._v("true")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("10")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout_offset_ns")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("0")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("configuration")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('""')]),t._v("\n      "),e("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),e("span",{staticClass:"token key atrule"},[t._v("name")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('"log_vs_demo_conn"')]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("enabled")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token boolean important"},[t._v("true")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("10")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout_offset_ns")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("0")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("configuration")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('""')]),t._v("\n      "),e("span",{staticClass:"token punctuation"},[t._v("-")]),t._v(" "),e("span",{staticClass:"token key atrule"},[t._v("name")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('"refData_vs_demo_conn"')]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("enabled")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token boolean important"},[t._v("true")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("10")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("match_timeout_offset_ns")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token number"},[t._v("0")]),t._v("\n        "),e("span",{staticClass:"token key atrule"},[t._v("configuration")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('""')]),t._v("\n")])]),e("copy-code-btn")],1),e("h2",{attrs:{id:"rule-class"}},[e("a",{attrs:{href:"#rule-class","aria-hidden":"true"}},[t._v("#")]),t._v("Rule class")]),e("p",[t._v("In files containing the rule class Rule should be defined. Structure of class Rule is as follows.")]),e("p",[e("g-image",{attrs:{src:a("fEcd"),alt:"Rule class"}})],1),e("p",[t._v("Getters:")]),e("ul",[e("li",[e("code",{pre:!0},[t._v("get_name()")]),t._v(" - name of the rule;")]),e("li",[e("code",{pre:!0},[t._v("get_description()")]),t._v(" - description of the rule;")]),e("li",[e("code",{pre:!0},[t._v("get_attributes()")]),t._v(" - required message stream attributes;")]),e("li",[e("code",{pre:!0},[t._v("desciption_of_groups()")]),t._v(" - dictionary containing names of the groups and its type. ")])]),e("p",[t._v("Group types are available in a "),e("strong",[t._v("check2-recon")]),t._v(" package. At the moment there are 2 group types:")]),e("ul",[e("li",[t._v("Type "),e("code",{pre:!0},[t._v("single")]),t._v(" means that all messages in the group have unique hashes (key of the message) - a new message replaces old.")]),e("li",[t._v("Type "),e("code",{pre:!0},[t._v("multiple")]),t._v(" means that several messages with the same hash can be stored in one message group.")])]),e("p",[t._v("Examples of getters:")]),e("div",{staticClass:"remark-highlight"},[e("pre",{staticClass:"language-python"},[e("code",{staticClass:"language-python"},[e("span",{staticClass:"token comment"},[t._v("##### rule_demo.py #####")]),t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"token function"},[t._v("get_name")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("self"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("-")]),e("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),e("span",{staticClass:"token builtin"},[t._v("str")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n       "),e("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('"Rule_demo"')]),t._v("\n       \n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"token function"},[t._v("get_description")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("self"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("-")]),e("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),e("span",{staticClass:"token builtin"},[t._v("str")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n       "),e("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),e("span",{staticClass:"token string"},[t._v('"Rule_demo is used for demo"')]),t._v("\n       \n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"token function"},[t._v("get_attributes")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("self"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("-")]),e("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("[")]),e("span",{staticClass:"token builtin"},[t._v("list")]),e("span",{staticClass:"token punctuation"},[t._v("]")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n       "),e("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("\n           "),e("span",{staticClass:"token punctuation"},[t._v("[")]),e("span",{staticClass:"token string"},[t._v("'parsed'")]),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),e("span",{staticClass:"token string"},[t._v("'subscribe'")]),e("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n       "),e("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n       \n "),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"token function"},[t._v("description_of_groups")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("self"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("-")]),e("span",{staticClass:"token operator"},[t._v(">")]),t._v(" "),e("span",{staticClass:"token builtin"},[t._v("dict")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n       "),e("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("{")]),e("span",{staticClass:"token string"},[t._v("'ExecutionReport'")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroupType"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("multi"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n               "),e("span",{staticClass:"token string"},[t._v("'NewOrderSingle'")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" MessageGroupType"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("single"),e("span",{staticClass:"token punctuation"},[t._v("}")]),t._v("\n")])]),e("copy-code-btn")],1),e("p",[t._v("Methods "),e("code",{pre:!0},[t._v("group()")]),t._v(", "),e("code",{pre:!0},[t._v("hash()")]),t._v(", "),e("code",{pre:!0},[t._v("check()")]),t._v("  in class Rule are responsible for messages processing. \nEvery incoming single message comes to the "),e("code",{pre:!0},[t._v("group")]),t._v(" method, then "),e("code",{pre:!0},[t._v("hash")]),t._v(" method, then "),e("code",{pre:!0},[t._v("check")]),t._v(" method.")]),e("p",[t._v("The lifecycle of an incoming message is:")]),e("ol",[e("li",[t._v("Comes in rule from some kind of pin. A record about this is written to log.")]),e("li",[t._v("The "),e("code",{pre:!0},[t._v("group(message, attributes)")]),t._v(" method is called for this message. It is calculated in which message group the message should be placed.")]),e("li",[t._v("The hash of the message is calculated using the "),e("code",{pre:!0},[t._v("hash(message, attributes)")]),t._v(".")]),e("li",[t._v("Searches for messages with the same hash in other message groups.")]),e("li",[t._v("If a message with the same hash is found in each group, "),e("code",{pre:!0},[t._v("check(messages)")]),t._v(" is called for all these messages. Depending on the types of message groups and their number, it will be determined which messages to delete and which to keep.")]),e("li",[t._v("If no similar messages are found, then just add the message to the group.")])]),e("p",[e("g-image",{attrs:{src:a("U0gz"),alt:"Rule flow"}})],1),e("h3",{attrs:{id:"group"}},[e("a",{attrs:{href:"#group","aria-hidden":"true"}},[t._v("#")]),t._v("group()")]),e("p",[t._v("Method "),e("code",{pre:!0},[t._v("group()")]),t._v(" analyses message with an algorithm written by a user and \nsets the message's group id. Further, it will help to reveal the group the \nmessage belongs to. Let us say, it means that we put a message to the group \nwith "),e("code",{pre:!0},[t._v("group")]),t._v(" method.")]),e("p",[e("g-image",{attrs:{src:a("kGCe"),alt:"Group method"}})],1),e("p",[t._v("Implementation example:")]),e("div",{staticClass:"remark-highlight"},[e("pre",{staticClass:"language-python"},[e("code",{staticClass:"language-python"},[e("span",{staticClass:"token comment"},[t._v("##### rule_demo.py #####")]),t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"token function"},[t._v("group")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("self"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" message"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" ReconMessage"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" attributes"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token builtin"},[t._v("tuple")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n       message_type"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token builtin"},[t._v("str")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("proto_message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("metadata"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("message_type\n       "),e("span",{staticClass:"token keyword"},[t._v("if")]),t._v(" message_type "),e("span",{staticClass:"token keyword"},[t._v("not")]),t._v(" "),e("span",{staticClass:"token keyword"},[t._v("in")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("[")]),e("span",{staticClass:"token string"},[t._v("'ExecutionReport'")]),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" "),e("span",{staticClass:"token string"},[t._v("'NewOrderSingle'")]),e("span",{staticClass:"token punctuation"},[t._v("]")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n           "),e("span",{staticClass:"token keyword"},[t._v("return")]),t._v("\n       message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("group_id "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" message_type\n       message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("group_info"),e("span",{staticClass:"token punctuation"},[t._v("[")]),e("span",{staticClass:"token string"},[t._v("'message_type'")]),e("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" message_type\n")])]),e("copy-code-btn")],1),e("h3",{attrs:{id:"hash"}},[e("a",{attrs:{href:"#hash","aria-hidden":"true"}},[t._v("#")]),t._v("hash()")]),e("p",[t._v("Method "),e("code",{pre:!0},[t._v("hash()")]),t._v(" generates the hash key for the message to join it in the future. \nHash key depends on one or several fields of the message. \nThe fields are defined by a user in "),e("code",{pre:!0},[t._v("method")]),t._v(" implementation. \nIf all these fields are the same in 2 messages, final hash keys also will be equal.")]),e("p",[e("g-image",{attrs:{src:a("m38l"),alt:"Hash method"}})],1),e("p",[t._v("Implementation example:")]),e("div",{staticClass:"remark-highlight"},[e("pre",{staticClass:"language-python"},[e("code",{staticClass:"language-python"},[e("span",{staticClass:"token comment"},[t._v("##### rule_demo.py #####")]),t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"token function"},[t._v("hash")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("self"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" message"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" ReconMessage"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" attributes"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token builtin"},[t._v("tuple")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n       cl_ord_id "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("proto_message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("fields"),e("span",{staticClass:"token punctuation"},[t._v("[")]),e("span",{staticClass:"token string"},[t._v("'ClOrdID'")]),e("span",{staticClass:"token punctuation"},[t._v("]")]),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("simple_value\n       message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),e("span",{staticClass:"token builtin"},[t._v("hash")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),e("span",{staticClass:"token builtin"},[t._v("hash")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("proto_message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("fields"),e("span",{staticClass:"token punctuation"},[t._v("[")]),e("span",{staticClass:"token string"},[t._v("'ClOrdID'")]),e("span",{staticClass:"token punctuation"},[t._v("]")]),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("simple_value"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n       message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("hash_info"),e("span",{staticClass:"token punctuation"},[t._v("[")]),e("span",{staticClass:"token string"},[t._v("'ClOrdID'")]),e("span",{staticClass:"token punctuation"},[t._v("]")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" cl_ord_id\n")])]),e("copy-code-btn")],1),e("h3",{attrs:{id:"check"}},[e("a",{attrs:{href:"#check","aria-hidden":"true"}},[t._v("#")]),t._v("check()")]),e("p",[t._v("Method "),e("code",{pre:!0},[t._v("check()")]),t._v(" compares the message with all messages from different groups and equal hash key. \nAfter the comparison "),e("code",{pre:!0},[t._v("check")]),t._v(" method generates an event with its result. \nFilling of the final event is defined by the algorithm written by a user. \nAfter that original message is available for comparison with future messages until timeout (message's Time To Live).")]),e("p",[e("g-image",{attrs:{src:a("Jhgc"),alt:"Check method"}})],1),e("p",[t._v("Implementation example:")]),e("div",{staticClass:"remark-highlight"},[e("pre",{staticClass:"language-python"},[e("code",{staticClass:"language-python"},[e("span",{staticClass:"token comment"},[t._v("##### rule_demo.py #####")]),t._v("\n"),e("span",{staticClass:"token keyword"},[t._v("def")]),t._v(" "),e("span",{staticClass:"token function"},[t._v("check")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("self"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" messages"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("ReconMessage"),e("span",{staticClass:"token punctuation"},[t._v("]")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v(" "),e("span",{staticClass:"token operator"},[t._v("-")]),e("span",{staticClass:"token operator"},[t._v(">")]),t._v(" Event"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n       settings "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" ComparisonSettings"),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n       compare_result "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" self"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("message_comparator"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("compare"),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("messages"),e("span",{staticClass:"token punctuation"},[t._v("[")]),e("span",{staticClass:"token number"},[t._v("0")]),e("span",{staticClass:"token punctuation"},[t._v("]")]),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("proto_message"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" messages"),e("span",{staticClass:"token punctuation"},[t._v("[")]),e("span",{staticClass:"token number"},[t._v("1")]),e("span",{staticClass:"token punctuation"},[t._v("]")]),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("proto_message"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v(" settings"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n       verification_component "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" VerificationComponent"),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("compare_result"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("comparison_result"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n\n       info_for_name "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),e("span",{staticClass:"token builtin"},[t._v("dict")]),e("span",{staticClass:"token punctuation"},[t._v("(")]),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n       "),e("span",{staticClass:"token keyword"},[t._v("for")]),t._v(" message "),e("span",{staticClass:"token keyword"},[t._v("in")]),t._v(" messages"),e("span",{staticClass:"token punctuation"},[t._v(":")]),t._v("\n           info_for_name"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("update"),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("hash_info"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n\n       body "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" EventUtils"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("create_event_body"),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("verification_component"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n       attach_ids "),e("span",{staticClass:"token operator"},[t._v("=")]),t._v(" "),e("span",{staticClass:"token punctuation"},[t._v("[")]),t._v("msg"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("proto_message"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("metadata"),e("span",{staticClass:"token punctuation"},[t._v(".")]),e("span",{staticClass:"token builtin"},[t._v("id")]),t._v(" "),e("span",{staticClass:"token keyword"},[t._v("for")]),t._v(" msg "),e("span",{staticClass:"token keyword"},[t._v("in")]),t._v(" messages"),e("span",{staticClass:"token punctuation"},[t._v("]")]),t._v("\n       "),e("span",{staticClass:"token keyword"},[t._v("return")]),t._v(" EventUtils"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("create_event"),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("name"),e("span",{staticClass:"token operator"},[t._v("=")]),e("span",{staticClass:"token string-interpolation"},[e("span",{staticClass:"token string"},[t._v("f\"Match by '")]),e("span",{staticClass:"token interpolation"},[e("span",{staticClass:"token punctuation"},[t._v("{")]),t._v("ReconMessage"),e("span",{staticClass:"token punctuation"},[t._v(".")]),t._v("get_info"),e("span",{staticClass:"token punctuation"},[t._v("(")]),t._v("info_for_name"),e("span",{staticClass:"token punctuation"},[t._v(")")]),e("span",{staticClass:"token punctuation"},[t._v("}")])]),e("span",{staticClass:"token string"},[t._v("'\"")])]),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n                                      attached_message_ids"),e("span",{staticClass:"token operator"},[t._v("=")]),t._v("attach_ids"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n                                      attached_message_ids"),e("span",{staticClass:"token operator"},[t._v("=")]),t._v("attach_ids"),e("span",{staticClass:"token punctuation"},[t._v(",")]),t._v("\n                                      body"),e("span",{staticClass:"token operator"},[t._v("=")]),t._v("body"),e("span",{staticClass:"token punctuation"},[t._v(")")]),t._v("\n")])]),e("copy-code-btn")],1)],1)}),[],!1,null,null,null);"function"==typeof p&&p(_),"function"==typeof u&&u(_);s.default=_.exports},U0gz:function(t,s){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/rule-flow-dfd.42db587.21f190ad5411d538a6189d989a5cd665.png",size:{width:2560,height:967},sizes:"(max-width: 2560px) 100vw, 2560px",srcset:["/assets/static/rule-flow-dfd.82a2fbd.21f190ad5411d538a6189d989a5cd665.png 480w","/assets/static/rule-flow-dfd.cbab2cf.21f190ad5411d538a6189d989a5cd665.png 1024w","/assets/static/rule-flow-dfd.2665e34.21f190ad5411d538a6189d989a5cd665.png 1920w","/assets/static/rule-flow-dfd.42db587.21f190ad5411d538a6189d989a5cd665.png 2560w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2560 967' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-b5cbf2484048a74af5082bc344c735fd'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-b5cbf2484048a74af5082bc344c735fd)' width='2560' height='967' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAAAsSAAALEgHS3X78AAAJLElEQVRYw82YeVBV1x3H7333AVIqDCgGiWhGDDiEJBLSAGm1WtfUmWSqsWprrdU/qhOnOu4O4zKu1RpxUHHf92V0FPd9xx33BUVU3DcWF%2bTB4/bzu7nnzROxtU2ccGbOnN879yy/3/e3nqdp/2Pbu3evNRYXF2uNGjXSKlMT3vbt22fRMir6J2%2bRkZG6TYbpup5A/0B%2bNGzYUFuxYoXn8jd1xejbzHvPvWlfeWHfmeDeFpCRkRG6YcOGuLFjx9ZLS0uLPHjwYK09e/bU4vv7MBDB6KHpteieeaEZhY7woj1r7P5G2t4ne7zpmvR60GGKz127dmnwaPG7YMEC7fDhw8bly5edp06dMtatW/eDEgcOHKht2bLFsXPnTseOHTte6TK3efNmx%2bjRo621EydO9KCLsMFHjhwJFdo0TVnnW1BQ4Pfo0SO/bdu2%2bcCAwVqD0Wl3%2be2Uua1bt/rcvXu3SmFhYRXu8N29e7exf/9%2b54EDBwy60%2b4WLXvUXjlH9qszbt686ffy5csq7PcVXpn3F1AUAP369bN47d%2b/f4XKvHPnjv7Wmk9NTRVBtStXrli/YTgYEEKEBqzXDrp%2b/bpmg2N11bKzs187W33Pz893rF692oF1OXAlx4sXLxwV8cL3CnlEkQJOhNBXr17Vb926pU%2baNEnx5gtoX589e7Y31tp5yJAh71mzPXr0CJg7d27iokWLEhcuXGj1xYsXW79lnDdvXmKfPn0CZW10dLTepUsX3b6sGqiHqstnz54di3mlXLx48V9Tp06tVxGDU6ZMMWQcP3587QsXLozNyspKXbZsWdx/Ax/%2bPACPGjXKAqV3797Vz5w5MxxB09asWdNQ5rBIP3iKqOgMFLfK9GpYYM7gwYPDtPnz58e7XC63PV8m3e12l0mTCUzMRNjfVKA1v/Pnz1cTetWqVVFoL18djhvcRtgIyCqXLl2q9vjx4%2bBDhw4FyVriRdD9%2b/dz1Fq2uRCwPmTkw4cP5yPUNKxkmox5eXlzmK9f/u4OHTo40e5xdYbwiHZ/J99QQNjz588Dzp07FwXAH/LZybQOUFlkLvPJkycvcb3S27dvm8uXL/9Cmz59ejyXlbLYZJEbhsvwjTJM2M0lZSBnEui%2biomJqYF5bSGAbKPvgU7r2bNnJIeHbN%2b%2bfVFRUZHsL7p27VpRSUmJiTbGY26H5Ewsw835YreBWMr3gi3zxVjBCxHg6NGj38P4t0Kz3%2bRuE3At4XJzczuyz4fME0YXwKuNGTOmn9zBucXsK8JVhE7nW1D79u2jCH7f2WeUYWHNmP8YWbJRtCin9OnTp2UAYeLGn4l5fc4lJloxCSpmTk6OSTATEzHRnDUuWbKkMYc4jh071hfh%2b7JxAJd0xffFj3QCTqpoAVSLbty48RILMlmXDLCZAGoChPzOtKPxYBGMtS7utQBg3TAEbyWC2IqQORNNmljF17KvFq1z586%2bkAbBuEtpaamJokrguUjuY89SWYfP14CHv8k53OtGniSm3%2becLLp5/PjxUkArw7rK4NsCIA7t5aGVQg7KZywA3QIusGiYKExPT/%2byvBkyr2PW1YVOSUkJA9nLyiTv3bt3nOxSnTEOABpjDb8FsM9kbUJCgg/ayFBrYerWhAkTap4%2bfbo%2baWoRQMwC6NlocBbnLwDkj2RfSEhIaJs2bTyxgHXpXm6Ujxt%2bKvNYU01MPQjhP8aVYsVVRUloPBsezczMTBeWVyZgk2V%2bpTVo0MCnefPm4S1atAhv1qxZeNOmTcNbtWoVLnMtW7a0xvj4eF87%2bjrRjORRHReoBoIhiqGuXbuGnjx58juY/3vr1q2DKgpEw4YN0%2b1gGgCj3WDmH0Tjmm%2bZiARsnSCtQNCxzN4E6imYeW2ZAERfMlOFQRChJ4tFPXv2zBRXAOCMQYMGBb91GmzXrt0rhRBjdVV0kFaM8uvRuAPzMzBNA9CMEydOGHbF9lpqw0ockq4wbWPlypXGuHHjjKVLlxqTJ082Zs6caQns7%2b8f2rZtW4d3ShUQ6FXVj40bN/pwvgUG7uXAuvQ5c%2bZ4FgPYJwD/DRYtQd3HmsSsLM2MHDlSHzFixCtd5uRbp06dlJY9AHCRFDvRjDWl0gP5OpiU9A%2bEtis2qQZrK1qYE1q0RBypK2u9K0K7YqxtjxYt1SUuFD506NBPiPQRWGEtXCUG64kB%2bHh6AnEqRlyI86JFMUpRvXr1snhNTEzUygFnNaxV/7/KYVUNcolUX1ZXdPlR0d6/y38vv867r1271oB5vW7duuIqOnQQJnwYq8qj38OyHuCS94ljuXyLVZWp4nXGjBnWOHz4cG39%2bvUSyA0qVQfZT/tRwr/TB4dXa9KkiaU90rBVdJG7A3GrXHK5lTEky8go2Yus8Kkyf293fSePIfU6Uy%2b08iP1uQQlLTk5Wdu0aZMObcCkkxTlhGEn6ciRlJSk16lTR4uKirJKbSK1TgbS0bBOFpLKzttEayjtUuQ0RsjfU/X9AX/%2bVlIoAfgrzq9ql8HvRvi3bd27d/f4HKnI8WPO4kETyPugE6lyGkGuudQB5Za84seA%2b/P/MaGEF9%2bVkSAagO%2b1R1P/pE%2biQhuI9uQN8EsJ8HQ/ihx/1gfYvaqUsFR8wRQ6Wd41PAKuUpZACg/EeoLlPvzaIOpb91J//PwgkHctzaO9LxA6R%2bpw7yal6KxZs6Q8lrTlS4rqRhS/gWucZ7xJtF89YMCAL6VCpWgppZdI/uasmyqF6br%2bCymvtcrW5F8huxn4/Ekpp8m/xfhuCX7qokorIXqXCiho9C%2b2Rv0pj%2bMePHgQS4r8nDGaVBeNNqV%2bdxPgrPXMi40HUmw5AUAKsaBKBwBFjMc/Ydwqe4nWLtzAhWZd5G4XgliWgMbbECR/TX3eC7D%2bxKPmrzzA/iibeYonAZyscfO9lEBnXvnhD4n3AgICgmwAnFplbGjYYYPxEZo9JY8l1USTlO/FVItpLKlChsiQOd4IomErrVF0xXbs2PHP8jAjZrgBwSUvPPblVhAIK1dTQZBUpSK0/L3VEsH6osBkrKEbz%2bIotZ7glULMuEhBk0GVl0ka2y6BkCDoi9An5OUnjxep5bGQuSrAYgWVEwD5L06BgNk7/gNQbyxF8XH1Tf7za0bcaEcaTPB6fP0kvP4bKUwwccEenKEAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}},UQSp:function(t,s,a){"use strict";s.a={name:"VueRemarkRoot",render:function(t){return t("div",null,this.$slots.default)}}},fEcd:function(t,s){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/rule-class-uml.8df89b3.e6b4299dcc3048e023ad228f90a96b56.png",size:{width:1404,height:960},sizes:"(max-width: 1404px) 100vw, 1404px",srcset:["/assets/static/rule-class-uml.82a2fbd.e6b4299dcc3048e023ad228f90a96b56.png 480w","/assets/static/rule-class-uml.cbab2cf.e6b4299dcc3048e023ad228f90a96b56.png 1024w","/assets/static/rule-class-uml.8df89b3.e6b4299dcc3048e023ad228f90a96b56.png 1404w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 1404 960' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-14926f5194ad207fd698bbe18ff45631'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-14926f5194ad207fd698bbe18ff45631)' width='1404' height='960' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAsCAYAAADVX77/AAAACXBIWXMAAAsSAAALEgHS3X78AAAG90lEQVRo3u2Z20/TSRTH%2b2tLKQi1xUIp4IVLRaAtuKty0V1BEdRVEa8L6HKR%2b%2brGVzcxJj7vruHBv8HEJ33zwScfVATiyz5gjEYTTUx8UB80KIXuDPv5kclvW1oXi3TZSb7pzJy5/ObMnO85MzX5/X7TSk1Xrlz5O1NeXp7S1tbmGx4e9g0MDCQUg4ODvr6%2bPl9HR4evp6fH193d7evs7PT19vbOyRI9v0DJ0NBQaVNTk3teE3Lxd%2b7cCb948SL85MmT8NOnTxMGOf6zZ8/Cr169Cj9//nwOcl5Zl8h5dTx%2b/HjmzZs34atXr/4xrwC58/IjRJpdCnz48GH21q1bs%2b/fv599%2b/bt7MuXL2dnZmZml2j%2babnQGzdu/D6vgP7%2bft%2bjR4%2bkMPTp06dQopIcW84xOTkZam9vD42MjIQuX74cOn/%2bfOj27dtzso8fP4YSmaanp6ekAq5fv/7bvALOnj3re/36dXip07t378LyOE5NTS353Ddv3hyZV0Bzc3PRtWvX/pyYmBi7e/fuuMCEjvv378%2bV7927N6HWy7LAuA69TrZfCLLt6Ojo%2bNjY2PjDhw/nIOYdf/DgwZwsVv/FQswxKuaevHjx4q%2bqR8gWKFxhXjAgvJ91LqdpWrbD4Sj2eDzexsZGe05OTl5ubq5H1G2Scln2er0et9u91uVyFYqyNzs7O9/pdJbU1NSkl5WVOTIyMiplH9lenLBlDZmsVmtA/syfAKEEn0C52WyWp2FAoFeg1W6328TvdwIdki8Fdgt0C5wQqKd9rcA50T8oB6usrNQuXLhgunTp0rJDaWmpxpqDqgJyBIrIy0oZHtqBrLeBVNpYBFZhOjb6pCabCURTgBajo/Zf4YBoCljsgs3JqAB5lEtAhsA3AnUCu5BvFtgrsF2gCvlm5JIfdgp8K1CNba0RWCc9rMCWZaqUiApYLyAvCUMCLQINnI6dlA%2bw6EZ44ozAVoFDAt%2bjjB30KRX4QXJiMnLAaqVh1gKDWCLUpSeJGcQkQXMMHlDbJYvdfzYJWpXFWUGKsvNWpW2KoSwV5MCknMnAAT5ITBJYE/beglzWt8unA8jwKPbeKnAETqiDGF0C%2bwSOMc4JhUy15ayAYnYxg4Vuh%2bjcLG4LhFaEF6imXEdZyssIkHRvsAUirE02DrArDd1xDhhpd9MEMlGKsY223EnQtIiFJz0JuontLZjFKlyj3FEPdWkKGcpdziOfygnS7wZ2JkqHX0yYmYc2ruVEgjXkuwRO8yuJcA/lI9wIpV0fF9gAw/fCA2kQZIcSSHXRtgXizCJC7Efe8JVO0j8UoN4G1wrkExnms0s%2biDKHOie7XkjZDQnWs7u51G9V2hVze5TzFTCWc7mYwEbFn8ebrMogVhYXiy8sEepSlLESjRTmrFQVIHdrv8AmBPEiiCbVfHCBtsEIcrWfng8Y2hsRiPIbjDFOQMFO1eyyOe4rKfmNJlD8BV1eZhTbtuABbHGOY6ePPcp7g2YwWXOEEF0N1TVlDcFooXAW4W49IewOmHoP5UPID1HfBKvvp85FFPkL9c2Um/AGZwirDyLbxXhNeJkqvuko5cN4kOPIOmnfjNfZy3c3EMEepl0aY9cRsrfEGwpLn3%2bK%2b3wFrrEZNpdEWU6Iu43feu4CbYoCM%2blfw8fodr9Rsf1q%2btdij0dxr%2bX0b8Sr%2bJWxgkq/GmKLYt4iGhi3ln42fit4rKkynOK4Q%2bF4k22RNmlbYg6I%2b01wqZP2tRRQrBCPG0KxYh6ruNunK%2bGx%2bjZgU8jITVSo%2b91UZA6CIU8U32wzkJgbPslRXqWcyvxm5DoRZjFGJjKLcrtdo5wwLVYoLGOCkxDHsMCPvA3sw0674IhjhMdtEFsPp0ja%2bc8Q3XGlnyS9QcLmfsjqNON3MsZBvqeLug6IdRBCG2DuDha1WyE42b4PPrFDjvsYv40NWFABxYr2swiHfeTzCGsziRfWEcpuoN8B8qsN/Qvo5%2bUD9PC3UAmP8/joauTpzOFVdl%2bfM1/J61dtPXjzICvkG1xsZh7jWuIlwZWSkkIBWhz1mgGmKLK4nsScEEcB/jOfo1XEES/gmBVwxPVj6lWOtp02u2nnZfxc5tiGPy9E5mUOD3n9ip1FAOXkOwqIB7ISdR0u4VEzB5veC%2bm0QESnlaBnCIJro14S3jnar2ehnchPKkTYAAGegmAPQFytjDlAPogiWlHCT0SFJ1DEYtxlRA7wGO4CdsUN6i4vE5eiPoHbISMHEVuK4bqrt0tTYvFUxU3ZkNmYP4/2DuVZPUVpbzFF/jPm36QqVQEumNgPo/oNV8cAJuE3XCv9oAI2DkS52vqVeuPY%2bhhlhMEBZZ6KCN8R66ocD6pMUf6y06IQSzwwxyCnz4Vpgfr/05dKfwFAPwMDluoJQQAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}},kGCe:function(t,s){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/group-method.42db587.c729ac4a5df82d4aa8d56c0c1e3f3038.png",size:{width:2560,height:797},sizes:"(max-width: 2560px) 100vw, 2560px",srcset:["/assets/static/group-method.82a2fbd.c729ac4a5df82d4aa8d56c0c1e3f3038.png 480w","/assets/static/group-method.cbab2cf.c729ac4a5df82d4aa8d56c0c1e3f3038.png 1024w","/assets/static/group-method.2665e34.c729ac4a5df82d4aa8d56c0c1e3f3038.png 1920w","/assets/static/group-method.42db587.c729ac4a5df82d4aa8d56c0c1e3f3038.png 2560w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2560 797' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-0438bf8794cf32380924586de53145e7'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-0438bf8794cf32380924586de53145e7)' width='2560' height='797' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAUCAYAAAA9djs/AAAACXBIWXMAAAsSAAALEgHS3X78AAAIAElEQVRYw81XeVCTSRb/coeEcAkKLmCCiyDXSBRcxMXBgll1WHbHXZnayy2rxAtqx6qtsspy9Z8dKQx4jq5HrcfoIqszOnKIOGOtMyGQyBGuJFwSELnPCCQESOh9/aVDwSzgMmOVdtWv3vu6%2b32v%2b73X/V5T1A9siYmJFEKI5jMzMyU3btyIuHbtmvT69esL4urVq9Jbt25JS0tLpXK5XJqVlUX3vU4O/xt0rDt79mxIUFAQA%2bs9duwY9dba0aNHsQHohej1%2bizg0fj4uGViYgItBIvFgoxGI1Iqlai2thaNjo7Sfa%2bTA1ixjo6ODn1cXBwP61WpVG/PAEeOHJk2QHNz8%2bd4cVNTUwbYjAnoKIbVajUCRqHPCBswY0xOTprHxsbMZWVlZtiAeXh42AzjZvv4fADjmuBfU%2b3t7fWbN2%2bmDQBGfHsGEAqFdpYVHh6%2bKikpKXDTpk3S7du3B8ACw2NjY8O3bt0aGh8fH5aQkBCUmprqm5ycLMZISUkRZ2dni2/fvi0%2bePCgePfu3eK9e/eK9%2bzZMy/wHJjru2HDhhA2m83Fiv38/Ki33gQCAQeIC8AdEEz4nxIsI3B8gypFAA71DjUOl8t1LygoYERERLBjYmJY69evZ1%2b4cIHh4%2bPDDwsL46xZs4YtFot53t7e/NOnTzOuXLnCwOMXL178vwFRw8TKHBwc3O0GYLFY74YBiPd9AesBPoAIQChASmgAQIyj9g3oc3vnIoAsinYKgEEom/DUjD7WO2eA8%2bfPMy5dujRv6F2%2bfJkhk8kYq1evpucfPnx4LgN4EM/jCPAGRAHeI4gEeJJIiCVzqRnG%2bdEG%2bOy%2bhjKRmiSnpIPxjbqX%2bXUFQD03Cst7mF/K2xaveePGjXNGAIPJpCNA4OjE9vL2Yy5bvoI5BAtycVvK4jkIuJe%2bqqT%2bca%2bcEgid2Nt2JM8S/mjnJ9Rf//5PKvVvny2I0HUxtMGYTNaSaQMwZtuwexQtaj/3il5S1L59%2b%2bi0hCnG/v37ZwHSl2TXrl3eXl5etDaJREJ0TyvnODs7L122bKknZIS1jkJhiKOjYxDw6zw8PDxdXV19YXwl9K2G1PmeSCQKdHV18YFxKVyMOGPQ9QSuKl8DWqGnp%2bcSBoNJG4DNttkhICyKuv9IQfP/ftoiyVV2Rj4obpd%2bVfxyLVAbSmwUIkQKNDLrid4WiSMjI/YixQQYswMKDwwjFC5WKD7qIL9z57LiSokvi6Q%2bOgjwRU3Am0FxhPBJOhQQD/J%2b4BFwJvfLrGYvyyuaTTdfDiNU3zU53tBttTR0WWjAtw2dk%2bMtEJ4KnSGFFsBlJm72MnVmg8qLpj09PS/gDsD5lwUewIbgcDg87rqISMyzrt9XHH2sfP5NofL5/ccqfU5BcWMO8DmPVc0YuV8/0z/Ik%2bsw/wCP5X2nyy1UNuc8KmnKA%2bRj5H6rzc/9Tpf/sKg%2b/6ECoyE/n/AFwOfJ6/IeFTcW3ilU35L%2b/JfYkCwnFzesn8uHY5aUtAPzzBJd/xe94whp2oyWav0rpH1polHXMY77UEPXhKXTiJCy/lUqbQCz2TyJq1i1Wm2BB4q1srLSWlRUZIX63trf3z9J6u8Wd3f35djTfD4fn0E3JovlHhCwCnsjuLCksWoAZqob%2b1Hl80FUrTeg2tYRpG4aQIqqNtTYNYG0oBx/47HSuh6aL9V1ozLg28AjKm0nyAyj8oZeem7LAEIlNe1I125CHSOIlgHHIl2nZTwwPMa2FgcBXos73Avu/v7%2beC2hOU9rn3SPwQY1XRN38hWW3P%2boLXcfKiw5TyosKm23pa7dPN4GPyqpIxFg9/JCDQzx4sCBA/Omnhx5U7Kq3nChpG4ovUjTlwE0s7Rp5ERJ3aBMXtObrtD0nyx7PnpS1WCQQd/JZ43DGcp6w4li7cAJeU2PTFk/lFmsGzwJMhlYBsvjOQptvwzmgKwxA2hGadPwuQJV63HZHR17vrVUvTBnD00hpO9HqM2AUCsYFxsTf7cOAg%2b0D5ylbHj1CS0A3h2CDQ739vYa%2bvr6XgFPA/PQNzQwMDCm0%2blqoqOj8RmmoJafdfVKxCu45Gzj8%2b6PuwA/IbyYUHzhrAR4ke9gMobLZexN7MlAMsePnHNcWK0id4Y9zeLGJZhuYZHvU5VVNXSlqNANnal%2bMdZX1WJqqmo16TGqW8f00Ed4U5Nab%2bx7Wj2wkxY%2bc%2baMCGoBEbyzRZiHUlV06tQp%2bvvcuXMiKFmd0tLShIGBgfT8Q4cO0ZTNmQ4IjqfXco%2bWtm52/AdbhL/5bZLDL7ZsE27dliD8MCFRGBQUvCQtPZOb%2bKuPBEkf/87hD3/6s0NC4q8FO4APl6512RC9UbQ/5S/82M1xjr//404HTLds%2b1C4JlzqGhwS6hYX/4HjpvdjRT%2bLinbCmUDit9IDjh%2bt3MnZdvfuPHSZqhyyXYLHb5ZzZNlV/PQsNS/tZhmNTz9/xjsOSP9XBU92u5J3IquS/%2bnN8sUXZfDCm68S9IDUhL22wuZBxnLiYbGtj%2bFFPArRwcDREUTm%2bdCUwfAgMhLgXRdchG18zuOY/6xrUfs5e09DUXDpUVqtltJoNP%2bD2tpaCsKfksvlVFRUFC109%2b7d7/%2bHRULeh2wslIRzMOEjSD8%2bGmHkXRBCeHul6E8QQua5kWPxfbgSI88ywMWcuuk0%2bLiiF46BgSrSDuHjMAu2PgMl1wwu2liva6wZ7wB7mTvzrsA8c4ESmDljnEU2uBDeWPsvykZNxRYUBcQAAAAASUVORK5CYII=' /%3e%3c/svg%3e"}},m38l:function(t,s){t.exports={type:"image",mimeType:"image/png",src:"/assets/static/hash-method.42db587.97fbc7b63f40555b4c1e1235bb5ce1a7.png",size:{width:2560,height:886},sizes:"(max-width: 2560px) 100vw, 2560px",srcset:["/assets/static/hash-method.82a2fbd.97fbc7b63f40555b4c1e1235bb5ce1a7.png 480w","/assets/static/hash-method.cbab2cf.97fbc7b63f40555b4c1e1235bb5ce1a7.png 1024w","/assets/static/hash-method.2665e34.97fbc7b63f40555b4c1e1235bb5ce1a7.png 1920w","/assets/static/hash-method.42db587.97fbc7b63f40555b4c1e1235bb5ce1a7.png 2560w"],dataUri:"data:image/svg+xml,%3csvg fill='none' viewBox='0 0 2560 886' xmlns='http://www.w3.org/2000/svg' xmlns:xlink='http://www.w3.org/1999/xlink'%3e%3cdefs%3e%3cfilter id='__svg-blur-932d4a869371560246c080bf3b60d0d0'%3e%3cfeGaussianBlur in='SourceGraphic' stdDeviation='40'/%3e%3c/filter%3e%3c/defs%3e%3cimage x='0' y='0' filter='url(%23__svg-blur-932d4a869371560246c080bf3b60d0d0)' width='2560' height='886' xlink:href='data:image/png%3bbase64%2ciVBORw0KGgoAAAANSUhEUgAAAEAAAAAWCAYAAABwvpo0AAAACXBIWXMAAAsSAAALEgHS3X78AAAHfklEQVRYw91Xe2yT1xX/vtgNDcEOOH58fsSJQyiU8GhJR1tVkSBCdNsf7dQyRlGZ1D/7F5MoUdZtAm3ZJk2kqqYB2lIhHqKPdCwshMSGUELefjRxEsd52Hm/Yyd27CSOH8ndOZ/vF2WFAi2VoFzpp3Puuefe%2b/ne3znnmmEesRUUFDAmk4nXT506Zbhw4cJuwC5Azv1w7ty5nNLS0hyLxZJTXV2dc/HixZwHzaHYdf78%2bd2FhYUc7llcXMw81nbr1i2GEJKAusvlugw6iUQiy0tLS%2bTbEIvF0I14PB4CB0C6u7t52/3mCIhGo8s4t6WlpQD3DAQCosd6AEajceUAurq6PoEfEoMP9cCH%2bpeXl6dBnwGTDyXaFhcXAwjQA16vN2C1WgPwYwKhUCgQDocfBj4AgXnHcE%2bfz/d4D0AqleIt8DrHcVk7d%2b7cmJmZuR0ayh1ZWVnbNm/evAVkNowZ9u/fr9y7dy%2bXm5vLHT58mDtz5gwHocPt27ePQ3teXt6DoNqzZ49aLpfrcU9Yk3kiGvx4FkQqQAHIAsgA6QA9tSkBiT/glrIn4oezLLuii8ViFdz6MwqFYo1KpVojk8mSoC%2bWSCTrUlJS1mIfJbAmGcKGOXr0KHvixAn25MmTD42ioiIWmMOKRCI8VAbWY56kpgKkAV6gt/8iYCPtbwdk0nHND7CXnHnCGkupjglRTOUaCqEvomGQRP0f/wF8WTPE2HrnRC39C6Lmvvl7AsdqO3x8ph/2EeZm89S3pgIa87sABip3AH4C2EbHsgH7AM/86BjQ7yUPYoCcygSK1W11uRLGWWpnvyfbHr1dvNEr%2b6rVe6i6ffqdr%2byeQzxa4/J2mxcw/avq9pl3KywTe9H/w8KP2aTkdfdjAMb3S4AtVL5Ic4OB2rbTnLAZoKUs%2bT5sSF3duVI7zMALiddvNE%2bxdU5/ArL2XsCxO%2b0zCV9UDzBMWePY7v4ZQkaChIzNEzK%2bEJcItA36CZlZIgRCoeYhPgp//FpAMoWE9jFVSylDkqkuoblgLZUCMGc8SyHYvqnjDajv9QF9nuXvdoxljaMvdY5Fo93j0aW61uFYo2M8ZumcAkzG7L3%2bWFt/MIIHYenxVyFtDZlZEih9yfTD/4%2b6EmmKIS09k1Nr0rRqbZoGJafR6bRpGWqtLl2j0xtUcoUqQwO6Sq3VpsqVmWqtHnz1GvTR6TM4sBmUKnW6MA/XUHGaNJjLoa%2bK0%2bq2ZO%2bUJa%2bTIHsYbVo6v/efTpfii5TX/9swqq%2bye7bd%2bHryeaNtYivIrSaUzZO8XtXi2WoCeelmbxIeQE7nWCTSMxGNmeqd0et3WgFt0SvGpmh920i0fWAuPDxLiLnbhwcg1ur0KfQAlPQ2%2bUY3X0dvSUPpLYSEjlJeSm06SuEs6reRSiktkzqaMIV9MuiBy1bFvlT4wcL%2bk54Z/kLMPcEyt4eQjpFI2DkajYGMdYxGYo7hMOpRlPaBhUi5efwVpqxp7OWh2Tj1p8JxTC7GgTa8fRiGEFio%2bwZ5BIrj5vzGZbXuk1ZXoNrc7S9v6vJVgF4BFUaQlY2d05VgL4dwqmjo8F5HPzpeieMwVtngnC63uoPXLT2zFRaYhxL8KmzuYKU13r8GvjVXa9zv4p51HV4%2b2f7yyPsrDAAf0wR8u2Nofsne5ycdQ/PEMThHusbCoC8Q99QS6NFlYMGrzBfVg5kWV/BTWPRz2PAzK49gHG4el2GsFJLG73DxPxedFbJ7Ik1uCn26YQPI50qMtvaJECE1zQOkyTFOIJSI2TlB7kD/trWXQJgRYBWxdk0RCDcejY4xAswjzpFFYuv2kpqWQRj3kDr7EO/f0D7K%2b/V5Cb8W%2bmEzmgc%2bwuSZbtiEjJKzbIISXqDrMcFeu9NhG50jODdScr0%2bdrXKFrt89TYyPAZrR3smYjHnSDhSaZt85Tvli8n5u8tguWWKcXvjDLhcaT9o7pn7vdk1/0FjdyC/sSuQb3EvHG/qCR6vdUwfs/WFUH5occ8fR72ha7bACuM1Du8H4HMM%2bw2d/t%2biDdbJB1t%2bvdMH68zm13f689EGOA4%2bf/hnSW0ef9vuECuEgMDEloHQTR%2bUhCFI4HgQw8BiZDkme94WjOvAgNewCjDO0YgITvu%2b%2bLp3jr/5W3X2ex7OX4rOCu%2bAZ2lMZ9DncAZFNo1fPS2JWvpIMtBc8DzNIYK/%2bAH3sX51DvjXl7UrIQAHdrp9aNHVNhhqbu2fc9i7Z3rb%2buecbW6/q2043Nw%2bFGqDx539WtPYjkd%2bR6xNljDFl/4T/6INqWpI9VoFZHEBSpUmXaHkMmDsOczuUB202EddyWn04JMhS1Vs3JAq38SpdTrBjpUBKooKKgGH1SEOA0IFUEuk65X8nw81XwyY7HeKoTD%2bhtcz3vyHmHv9o8S0nxYlMnkl4s/eOpj777fe/vUf33hPzrxaJdr0s7%2bt4X7%2bceILR86xzNPW2JcL77KZD7wuuXngjVw%2bVA4xT2c7XdqB1Of1Typ6GKjxzKclDfwNVxw5klR58AD/YLjy17PsJZOLuWByM3%2b/4mCe%2bmY88Iu7dOPbb67Y/ge1QyER/I5WtgAAAABJRU5ErkJggg==' /%3e%3c/svg%3e"}}}]);